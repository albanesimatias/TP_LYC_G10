Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIVISION
    MULTIPLICACION
    READ
    RESTA
    SUMA
    WRITE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencia programa
Rule 2     programa -> sentencia
Rule 3     sentencia -> asignacion
Rule 4     sentencia -> iteracion
Rule 5     sentencia -> seleccion
Rule 6     sentencia -> bloque_declaracion
Rule 7     sentencia -> suma_los_ultimos
Rule 8     bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE
Rule 9     declaraciones -> declaracion declaraciones
Rule 10    declaraciones -> declaracion
Rule 11    declaracion -> lista_variables DOS_PUNTOS tipo_dato
Rule 12    declaracion -> lista_variables DOS_PUNTOS tipo_dato declaracion
Rule 13    lista_variables -> VARIABLE
Rule 14    lista_variables -> VARIABLE COMA lista_variables
Rule 15    tipo_dato -> FLOAT
Rule 16    tipo_dato -> INT
Rule 17    tipo_dato -> STR
Rule 18    seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque
Rule 19    seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
Rule 20    iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque
Rule 21    condicion -> condicion OR comparacion
Rule 22    condicion -> condicion AND comparacion
Rule 23    condicion -> comparacion
Rule 24    comparacion -> elemento comparador elemento
Rule 25    comparacion -> elemento
Rule 26    comparador -> MENORI
Rule 27    comparador -> MENORQ
Rule 28    comparador -> MAYORQ
Rule 29    comparador -> MAYORI
Rule 30    comparador -> IGUALI
Rule 31    bloque -> A_LLAVE programa C_LLAVE
Rule 32    asignacion -> VARIABLE ASIGNACION VARIABLE
Rule 33    asignacion -> VARIABLE ASIGNACION N_ENTERO
Rule 34    asignacion -> VARIABLE ASIGNACION N_DECIMAL
Rule 35    asignacion -> VARIABLE ASIGNACION CADENA
Rule 36    asignacion -> VARIABLE ASIGNACION N_BINARIO
Rule 37    asignacion -> VARIABLE ASIGNACION lista
Rule 38    suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS
Rule 39    lista -> A_CORCHETE elementos C_CORCHETE
Rule 40    elementos -> elementos COMA elemento
Rule 41    elementos -> elemento
Rule 42    elemento -> N_ENTERO
Rule 43    elemento -> N_DECIMAL
Rule 44    elemento -> N_BINARIO
Rule 45    elemento -> VARIABLE
Rule 46    elemento -> CADENA

Terminals, with rules where they appear

AND                  : 22
ASIGNACION           : 32 33 34 35 36 37
A_CORCHETE           : 39
A_LLAVE              : 8 31
A_PARENTESIS         : 18 19 20 38
CADENA               : 35 46
COMA                 : 14 40
C_CORCHETE           : 39
C_LLAVE              : 8 31
C_PARENTESIS         : 18 19 20 38
DIVISION             : 
DOS_PUNTOS           : 11 12
ELSE                 : 19
FLOAT                : 15
IF                   : 18 19
IGUALI               : 30
INIT                 : 8
INT                  : 16
MAYORI               : 29
MAYORQ               : 28
MENORI               : 26
MENORQ               : 27
MULTIPLICACION       : 
N_BINARIO            : 36 44
N_DECIMAL            : 34 43
N_ENTERO             : 33 38 42
OR                   : 21
PUNTO_Y_COMA         : 38
READ                 : 
RESTA                : 
STR                  : 17
SUMA                 : 
SUMA_LOS_ULTIMOS     : 38
VARIABLE             : 13 14 32 32 33 34 35 36 37 45
WHILE                : 20
WRITE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
bloque               : 18 19 19 20
bloque_declaracion   : 6
comparacion          : 21 22 23
comparador           : 24
condicion            : 18 19 20 21 22
declaracion          : 9 10 12
declaraciones        : 8 9
elemento             : 24 24 25 40 41
elementos            : 39 40
iteracion            : 4
lista                : 37 38
lista_variables      : 11 12 14
programa             : 1 31 0
seleccion            : 5
sentencia            : 1 2
suma_los_ultimos     : 7
tipo_dato            : 11 12

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . sentencia programa
    (2) programa -> . sentencia
    (3) sentencia -> . asignacion
    (4) sentencia -> . iteracion
    (5) sentencia -> . seleccion
    (6) sentencia -> . bloque_declaracion
    (7) sentencia -> . suma_los_ultimos
    (32) asignacion -> . VARIABLE ASIGNACION VARIABLE
    (33) asignacion -> . VARIABLE ASIGNACION N_ENTERO
    (34) asignacion -> . VARIABLE ASIGNACION N_DECIMAL
    (35) asignacion -> . VARIABLE ASIGNACION CADENA
    (36) asignacion -> . VARIABLE ASIGNACION N_BINARIO
    (37) asignacion -> . VARIABLE ASIGNACION lista
    (20) iteracion -> . WHILE A_PARENTESIS condicion C_PARENTESIS bloque
    (18) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque
    (19) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
    (8) bloque_declaracion -> . INIT A_LLAVE declaraciones C_LLAVE
    (38) suma_los_ultimos -> . SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    VARIABLE        shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    INIT            shift and go to state 11
    SUMA_LOS_ULTIMOS shift and go to state 12

    programa                       shift and go to state 1
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    iteracion                      shift and go to state 4
    seleccion                      shift and go to state 5
    bloque_declaracion             shift and go to state 6
    suma_los_ultimos               shift and go to state 7

state 1

    (0) S' -> programa .



state 2

    (1) programa -> sentencia . programa
    (2) programa -> sentencia .
    (1) programa -> . sentencia programa
    (2) programa -> . sentencia
    (3) sentencia -> . asignacion
    (4) sentencia -> . iteracion
    (5) sentencia -> . seleccion
    (6) sentencia -> . bloque_declaracion
    (7) sentencia -> . suma_los_ultimos
    (32) asignacion -> . VARIABLE ASIGNACION VARIABLE
    (33) asignacion -> . VARIABLE ASIGNACION N_ENTERO
    (34) asignacion -> . VARIABLE ASIGNACION N_DECIMAL
    (35) asignacion -> . VARIABLE ASIGNACION CADENA
    (36) asignacion -> . VARIABLE ASIGNACION N_BINARIO
    (37) asignacion -> . VARIABLE ASIGNACION lista
    (20) iteracion -> . WHILE A_PARENTESIS condicion C_PARENTESIS bloque
    (18) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque
    (19) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
    (8) bloque_declaracion -> . INIT A_LLAVE declaraciones C_LLAVE
    (38) suma_los_ultimos -> . SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    $end            reduce using rule 2 (programa -> sentencia .)
    C_LLAVE         reduce using rule 2 (programa -> sentencia .)
    VARIABLE        shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    INIT            shift and go to state 11
    SUMA_LOS_ULTIMOS shift and go to state 12

    sentencia                      shift and go to state 2
    programa                       shift and go to state 13
    asignacion                     shift and go to state 3
    iteracion                      shift and go to state 4
    seleccion                      shift and go to state 5
    bloque_declaracion             shift and go to state 6
    suma_los_ultimos               shift and go to state 7

state 3

    (3) sentencia -> asignacion .

    VARIABLE        reduce using rule 3 (sentencia -> asignacion .)
    WHILE           reduce using rule 3 (sentencia -> asignacion .)
    IF              reduce using rule 3 (sentencia -> asignacion .)
    INIT            reduce using rule 3 (sentencia -> asignacion .)
    SUMA_LOS_ULTIMOS reduce using rule 3 (sentencia -> asignacion .)
    $end            reduce using rule 3 (sentencia -> asignacion .)
    C_LLAVE         reduce using rule 3 (sentencia -> asignacion .)


state 4

    (4) sentencia -> iteracion .

    VARIABLE        reduce using rule 4 (sentencia -> iteracion .)
    WHILE           reduce using rule 4 (sentencia -> iteracion .)
    IF              reduce using rule 4 (sentencia -> iteracion .)
    INIT            reduce using rule 4 (sentencia -> iteracion .)
    SUMA_LOS_ULTIMOS reduce using rule 4 (sentencia -> iteracion .)
    $end            reduce using rule 4 (sentencia -> iteracion .)
    C_LLAVE         reduce using rule 4 (sentencia -> iteracion .)


state 5

    (5) sentencia -> seleccion .

    VARIABLE        reduce using rule 5 (sentencia -> seleccion .)
    WHILE           reduce using rule 5 (sentencia -> seleccion .)
    IF              reduce using rule 5 (sentencia -> seleccion .)
    INIT            reduce using rule 5 (sentencia -> seleccion .)
    SUMA_LOS_ULTIMOS reduce using rule 5 (sentencia -> seleccion .)
    $end            reduce using rule 5 (sentencia -> seleccion .)
    C_LLAVE         reduce using rule 5 (sentencia -> seleccion .)


state 6

    (6) sentencia -> bloque_declaracion .

    VARIABLE        reduce using rule 6 (sentencia -> bloque_declaracion .)
    WHILE           reduce using rule 6 (sentencia -> bloque_declaracion .)
    IF              reduce using rule 6 (sentencia -> bloque_declaracion .)
    INIT            reduce using rule 6 (sentencia -> bloque_declaracion .)
    SUMA_LOS_ULTIMOS reduce using rule 6 (sentencia -> bloque_declaracion .)
    $end            reduce using rule 6 (sentencia -> bloque_declaracion .)
    C_LLAVE         reduce using rule 6 (sentencia -> bloque_declaracion .)


state 7

    (7) sentencia -> suma_los_ultimos .

    VARIABLE        reduce using rule 7 (sentencia -> suma_los_ultimos .)
    WHILE           reduce using rule 7 (sentencia -> suma_los_ultimos .)
    IF              reduce using rule 7 (sentencia -> suma_los_ultimos .)
    INIT            reduce using rule 7 (sentencia -> suma_los_ultimos .)
    SUMA_LOS_ULTIMOS reduce using rule 7 (sentencia -> suma_los_ultimos .)
    $end            reduce using rule 7 (sentencia -> suma_los_ultimos .)
    C_LLAVE         reduce using rule 7 (sentencia -> suma_los_ultimos .)


state 8

    (32) asignacion -> VARIABLE . ASIGNACION VARIABLE
    (33) asignacion -> VARIABLE . ASIGNACION N_ENTERO
    (34) asignacion -> VARIABLE . ASIGNACION N_DECIMAL
    (35) asignacion -> VARIABLE . ASIGNACION CADENA
    (36) asignacion -> VARIABLE . ASIGNACION N_BINARIO
    (37) asignacion -> VARIABLE . ASIGNACION lista

    ASIGNACION      shift and go to state 14


state 9

    (20) iteracion -> WHILE . A_PARENTESIS condicion C_PARENTESIS bloque

    A_PARENTESIS    shift and go to state 15


state 10

    (18) seleccion -> IF . A_PARENTESIS condicion C_PARENTESIS bloque
    (19) seleccion -> IF . A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque

    A_PARENTESIS    shift and go to state 16


state 11

    (8) bloque_declaracion -> INIT . A_LLAVE declaraciones C_LLAVE

    A_LLAVE         shift and go to state 17


state 12

    (38) suma_los_ultimos -> SUMA_LOS_ULTIMOS . A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    A_PARENTESIS    shift and go to state 18


state 13

    (1) programa -> sentencia programa .

    $end            reduce using rule 1 (programa -> sentencia programa .)
    C_LLAVE         reduce using rule 1 (programa -> sentencia programa .)


state 14

    (32) asignacion -> VARIABLE ASIGNACION . VARIABLE
    (33) asignacion -> VARIABLE ASIGNACION . N_ENTERO
    (34) asignacion -> VARIABLE ASIGNACION . N_DECIMAL
    (35) asignacion -> VARIABLE ASIGNACION . CADENA
    (36) asignacion -> VARIABLE ASIGNACION . N_BINARIO
    (37) asignacion -> VARIABLE ASIGNACION . lista
    (39) lista -> . A_CORCHETE elementos C_CORCHETE

    VARIABLE        shift and go to state 19
    N_ENTERO        shift and go to state 20
    N_DECIMAL       shift and go to state 21
    CADENA          shift and go to state 22
    N_BINARIO       shift and go to state 23
    A_CORCHETE      shift and go to state 25

    lista                          shift and go to state 24

state 15

    (20) iteracion -> WHILE A_PARENTESIS . condicion C_PARENTESIS bloque
    (21) condicion -> . condicion OR comparacion
    (22) condicion -> . condicion AND comparacion
    (23) condicion -> . comparacion
    (24) comparacion -> . elemento comparador elemento
    (25) comparacion -> . elemento
    (42) elemento -> . N_ENTERO
    (43) elemento -> . N_DECIMAL
    (44) elemento -> . N_BINARIO
    (45) elemento -> . VARIABLE
    (46) elemento -> . CADENA

    N_ENTERO        shift and go to state 29
    N_DECIMAL       shift and go to state 30
    N_BINARIO       shift and go to state 31
    VARIABLE        shift and go to state 32
    CADENA          shift and go to state 33

    condicion                      shift and go to state 26
    comparacion                    shift and go to state 27
    elemento                       shift and go to state 28

state 16

    (18) seleccion -> IF A_PARENTESIS . condicion C_PARENTESIS bloque
    (19) seleccion -> IF A_PARENTESIS . condicion C_PARENTESIS bloque ELSE bloque
    (21) condicion -> . condicion OR comparacion
    (22) condicion -> . condicion AND comparacion
    (23) condicion -> . comparacion
    (24) comparacion -> . elemento comparador elemento
    (25) comparacion -> . elemento
    (42) elemento -> . N_ENTERO
    (43) elemento -> . N_DECIMAL
    (44) elemento -> . N_BINARIO
    (45) elemento -> . VARIABLE
    (46) elemento -> . CADENA

    N_ENTERO        shift and go to state 29
    N_DECIMAL       shift and go to state 30
    N_BINARIO       shift and go to state 31
    VARIABLE        shift and go to state 32
    CADENA          shift and go to state 33

    condicion                      shift and go to state 34
    comparacion                    shift and go to state 27
    elemento                       shift and go to state 28

state 17

    (8) bloque_declaracion -> INIT A_LLAVE . declaraciones C_LLAVE
    (9) declaraciones -> . declaracion declaraciones
    (10) declaraciones -> . declaracion
    (11) declaracion -> . lista_variables DOS_PUNTOS tipo_dato
    (12) declaracion -> . lista_variables DOS_PUNTOS tipo_dato declaracion
    (13) lista_variables -> . VARIABLE
    (14) lista_variables -> . VARIABLE COMA lista_variables

    VARIABLE        shift and go to state 38

    declaraciones                  shift and go to state 35
    declaracion                    shift and go to state 36
    lista_variables                shift and go to state 37

state 18

    (38) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS . N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    N_ENTERO        shift and go to state 39


state 19

    (32) asignacion -> VARIABLE ASIGNACION VARIABLE .

    VARIABLE        reduce using rule 32 (asignacion -> VARIABLE ASIGNACION VARIABLE .)
    WHILE           reduce using rule 32 (asignacion -> VARIABLE ASIGNACION VARIABLE .)
    IF              reduce using rule 32 (asignacion -> VARIABLE ASIGNACION VARIABLE .)
    INIT            reduce using rule 32 (asignacion -> VARIABLE ASIGNACION VARIABLE .)
    SUMA_LOS_ULTIMOS reduce using rule 32 (asignacion -> VARIABLE ASIGNACION VARIABLE .)
    $end            reduce using rule 32 (asignacion -> VARIABLE ASIGNACION VARIABLE .)
    C_LLAVE         reduce using rule 32 (asignacion -> VARIABLE ASIGNACION VARIABLE .)


state 20

    (33) asignacion -> VARIABLE ASIGNACION N_ENTERO .

    VARIABLE        reduce using rule 33 (asignacion -> VARIABLE ASIGNACION N_ENTERO .)
    WHILE           reduce using rule 33 (asignacion -> VARIABLE ASIGNACION N_ENTERO .)
    IF              reduce using rule 33 (asignacion -> VARIABLE ASIGNACION N_ENTERO .)
    INIT            reduce using rule 33 (asignacion -> VARIABLE ASIGNACION N_ENTERO .)
    SUMA_LOS_ULTIMOS reduce using rule 33 (asignacion -> VARIABLE ASIGNACION N_ENTERO .)
    $end            reduce using rule 33 (asignacion -> VARIABLE ASIGNACION N_ENTERO .)
    C_LLAVE         reduce using rule 33 (asignacion -> VARIABLE ASIGNACION N_ENTERO .)


state 21

    (34) asignacion -> VARIABLE ASIGNACION N_DECIMAL .

    VARIABLE        reduce using rule 34 (asignacion -> VARIABLE ASIGNACION N_DECIMAL .)
    WHILE           reduce using rule 34 (asignacion -> VARIABLE ASIGNACION N_DECIMAL .)
    IF              reduce using rule 34 (asignacion -> VARIABLE ASIGNACION N_DECIMAL .)
    INIT            reduce using rule 34 (asignacion -> VARIABLE ASIGNACION N_DECIMAL .)
    SUMA_LOS_ULTIMOS reduce using rule 34 (asignacion -> VARIABLE ASIGNACION N_DECIMAL .)
    $end            reduce using rule 34 (asignacion -> VARIABLE ASIGNACION N_DECIMAL .)
    C_LLAVE         reduce using rule 34 (asignacion -> VARIABLE ASIGNACION N_DECIMAL .)


state 22

    (35) asignacion -> VARIABLE ASIGNACION CADENA .

    VARIABLE        reduce using rule 35 (asignacion -> VARIABLE ASIGNACION CADENA .)
    WHILE           reduce using rule 35 (asignacion -> VARIABLE ASIGNACION CADENA .)
    IF              reduce using rule 35 (asignacion -> VARIABLE ASIGNACION CADENA .)
    INIT            reduce using rule 35 (asignacion -> VARIABLE ASIGNACION CADENA .)
    SUMA_LOS_ULTIMOS reduce using rule 35 (asignacion -> VARIABLE ASIGNACION CADENA .)
    $end            reduce using rule 35 (asignacion -> VARIABLE ASIGNACION CADENA .)
    C_LLAVE         reduce using rule 35 (asignacion -> VARIABLE ASIGNACION CADENA .)


state 23

    (36) asignacion -> VARIABLE ASIGNACION N_BINARIO .

    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE ASIGNACION N_BINARIO .)
    WHILE           reduce using rule 36 (asignacion -> VARIABLE ASIGNACION N_BINARIO .)
    IF              reduce using rule 36 (asignacion -> VARIABLE ASIGNACION N_BINARIO .)
    INIT            reduce using rule 36 (asignacion -> VARIABLE ASIGNACION N_BINARIO .)
    SUMA_LOS_ULTIMOS reduce using rule 36 (asignacion -> VARIABLE ASIGNACION N_BINARIO .)
    $end            reduce using rule 36 (asignacion -> VARIABLE ASIGNACION N_BINARIO .)
    C_LLAVE         reduce using rule 36 (asignacion -> VARIABLE ASIGNACION N_BINARIO .)


state 24

    (37) asignacion -> VARIABLE ASIGNACION lista .

    VARIABLE        reduce using rule 37 (asignacion -> VARIABLE ASIGNACION lista .)
    WHILE           reduce using rule 37 (asignacion -> VARIABLE ASIGNACION lista .)
    IF              reduce using rule 37 (asignacion -> VARIABLE ASIGNACION lista .)
    INIT            reduce using rule 37 (asignacion -> VARIABLE ASIGNACION lista .)
    SUMA_LOS_ULTIMOS reduce using rule 37 (asignacion -> VARIABLE ASIGNACION lista .)
    $end            reduce using rule 37 (asignacion -> VARIABLE ASIGNACION lista .)
    C_LLAVE         reduce using rule 37 (asignacion -> VARIABLE ASIGNACION lista .)


state 25

    (39) lista -> A_CORCHETE . elementos C_CORCHETE
    (40) elementos -> . elementos COMA elemento
    (41) elementos -> . elemento
    (42) elemento -> . N_ENTERO
    (43) elemento -> . N_DECIMAL
    (44) elemento -> . N_BINARIO
    (45) elemento -> . VARIABLE
    (46) elemento -> . CADENA

    N_ENTERO        shift and go to state 29
    N_DECIMAL       shift and go to state 30
    N_BINARIO       shift and go to state 31
    VARIABLE        shift and go to state 32
    CADENA          shift and go to state 33

    elementos                      shift and go to state 40
    elemento                       shift and go to state 41

state 26

    (20) iteracion -> WHILE A_PARENTESIS condicion . C_PARENTESIS bloque
    (21) condicion -> condicion . OR comparacion
    (22) condicion -> condicion . AND comparacion

    C_PARENTESIS    shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 27

    (23) condicion -> comparacion .

    C_PARENTESIS    reduce using rule 23 (condicion -> comparacion .)
    OR              reduce using rule 23 (condicion -> comparacion .)
    AND             reduce using rule 23 (condicion -> comparacion .)


state 28

    (24) comparacion -> elemento . comparador elemento
    (25) comparacion -> elemento .
    (26) comparador -> . MENORI
    (27) comparador -> . MENORQ
    (28) comparador -> . MAYORQ
    (29) comparador -> . MAYORI
    (30) comparador -> . IGUALI

    C_PARENTESIS    reduce using rule 25 (comparacion -> elemento .)
    OR              reduce using rule 25 (comparacion -> elemento .)
    AND             reduce using rule 25 (comparacion -> elemento .)
    MENORI          shift and go to state 46
    MENORQ          shift and go to state 47
    MAYORQ          shift and go to state 48
    MAYORI          shift and go to state 49
    IGUALI          shift and go to state 50

    comparador                     shift and go to state 45

state 29

    (42) elemento -> N_ENTERO .

    MENORI          reduce using rule 42 (elemento -> N_ENTERO .)
    MENORQ          reduce using rule 42 (elemento -> N_ENTERO .)
    MAYORQ          reduce using rule 42 (elemento -> N_ENTERO .)
    MAYORI          reduce using rule 42 (elemento -> N_ENTERO .)
    IGUALI          reduce using rule 42 (elemento -> N_ENTERO .)
    C_PARENTESIS    reduce using rule 42 (elemento -> N_ENTERO .)
    OR              reduce using rule 42 (elemento -> N_ENTERO .)
    AND             reduce using rule 42 (elemento -> N_ENTERO .)
    C_CORCHETE      reduce using rule 42 (elemento -> N_ENTERO .)
    COMA            reduce using rule 42 (elemento -> N_ENTERO .)


state 30

    (43) elemento -> N_DECIMAL .

    MENORI          reduce using rule 43 (elemento -> N_DECIMAL .)
    MENORQ          reduce using rule 43 (elemento -> N_DECIMAL .)
    MAYORQ          reduce using rule 43 (elemento -> N_DECIMAL .)
    MAYORI          reduce using rule 43 (elemento -> N_DECIMAL .)
    IGUALI          reduce using rule 43 (elemento -> N_DECIMAL .)
    C_PARENTESIS    reduce using rule 43 (elemento -> N_DECIMAL .)
    OR              reduce using rule 43 (elemento -> N_DECIMAL .)
    AND             reduce using rule 43 (elemento -> N_DECIMAL .)
    C_CORCHETE      reduce using rule 43 (elemento -> N_DECIMAL .)
    COMA            reduce using rule 43 (elemento -> N_DECIMAL .)


state 31

    (44) elemento -> N_BINARIO .

    MENORI          reduce using rule 44 (elemento -> N_BINARIO .)
    MENORQ          reduce using rule 44 (elemento -> N_BINARIO .)
    MAYORQ          reduce using rule 44 (elemento -> N_BINARIO .)
    MAYORI          reduce using rule 44 (elemento -> N_BINARIO .)
    IGUALI          reduce using rule 44 (elemento -> N_BINARIO .)
    C_PARENTESIS    reduce using rule 44 (elemento -> N_BINARIO .)
    OR              reduce using rule 44 (elemento -> N_BINARIO .)
    AND             reduce using rule 44 (elemento -> N_BINARIO .)
    C_CORCHETE      reduce using rule 44 (elemento -> N_BINARIO .)
    COMA            reduce using rule 44 (elemento -> N_BINARIO .)


state 32

    (45) elemento -> VARIABLE .

    MENORI          reduce using rule 45 (elemento -> VARIABLE .)
    MENORQ          reduce using rule 45 (elemento -> VARIABLE .)
    MAYORQ          reduce using rule 45 (elemento -> VARIABLE .)
    MAYORI          reduce using rule 45 (elemento -> VARIABLE .)
    IGUALI          reduce using rule 45 (elemento -> VARIABLE .)
    C_PARENTESIS    reduce using rule 45 (elemento -> VARIABLE .)
    OR              reduce using rule 45 (elemento -> VARIABLE .)
    AND             reduce using rule 45 (elemento -> VARIABLE .)
    C_CORCHETE      reduce using rule 45 (elemento -> VARIABLE .)
    COMA            reduce using rule 45 (elemento -> VARIABLE .)


state 33

    (46) elemento -> CADENA .

    MENORI          reduce using rule 46 (elemento -> CADENA .)
    MENORQ          reduce using rule 46 (elemento -> CADENA .)
    MAYORQ          reduce using rule 46 (elemento -> CADENA .)
    MAYORI          reduce using rule 46 (elemento -> CADENA .)
    IGUALI          reduce using rule 46 (elemento -> CADENA .)
    C_PARENTESIS    reduce using rule 46 (elemento -> CADENA .)
    OR              reduce using rule 46 (elemento -> CADENA .)
    AND             reduce using rule 46 (elemento -> CADENA .)
    C_CORCHETE      reduce using rule 46 (elemento -> CADENA .)
    COMA            reduce using rule 46 (elemento -> CADENA .)


state 34

    (18) seleccion -> IF A_PARENTESIS condicion . C_PARENTESIS bloque
    (19) seleccion -> IF A_PARENTESIS condicion . C_PARENTESIS bloque ELSE bloque
    (21) condicion -> condicion . OR comparacion
    (22) condicion -> condicion . AND comparacion

    C_PARENTESIS    shift and go to state 51
    OR              shift and go to state 43
    AND             shift and go to state 44


state 35

    (8) bloque_declaracion -> INIT A_LLAVE declaraciones . C_LLAVE

    C_LLAVE         shift and go to state 52


state 36

    (9) declaraciones -> declaracion . declaraciones
    (10) declaraciones -> declaracion .
    (9) declaraciones -> . declaracion declaraciones
    (10) declaraciones -> . declaracion
    (11) declaracion -> . lista_variables DOS_PUNTOS tipo_dato
    (12) declaracion -> . lista_variables DOS_PUNTOS tipo_dato declaracion
    (13) lista_variables -> . VARIABLE
    (14) lista_variables -> . VARIABLE COMA lista_variables

    C_LLAVE         reduce using rule 10 (declaraciones -> declaracion .)
    VARIABLE        shift and go to state 38

    declaracion                    shift and go to state 36
    declaraciones                  shift and go to state 53
    lista_variables                shift and go to state 37

state 37

    (11) declaracion -> lista_variables . DOS_PUNTOS tipo_dato
    (12) declaracion -> lista_variables . DOS_PUNTOS tipo_dato declaracion

    DOS_PUNTOS      shift and go to state 54


state 38

    (13) lista_variables -> VARIABLE .
    (14) lista_variables -> VARIABLE . COMA lista_variables

    DOS_PUNTOS      reduce using rule 13 (lista_variables -> VARIABLE .)
    COMA            shift and go to state 55


state 39

    (38) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO . PUNTO_Y_COMA lista C_PARENTESIS

    PUNTO_Y_COMA    shift and go to state 56


state 40

    (39) lista -> A_CORCHETE elementos . C_CORCHETE
    (40) elementos -> elementos . COMA elemento

    C_CORCHETE      shift and go to state 57
    COMA            shift and go to state 58


state 41

    (41) elementos -> elemento .

    C_CORCHETE      reduce using rule 41 (elementos -> elemento .)
    COMA            reduce using rule 41 (elementos -> elemento .)


state 42

    (20) iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS . bloque
    (31) bloque -> . A_LLAVE programa C_LLAVE

    A_LLAVE         shift and go to state 60

    bloque                         shift and go to state 59

state 43

    (21) condicion -> condicion OR . comparacion
    (24) comparacion -> . elemento comparador elemento
    (25) comparacion -> . elemento
    (42) elemento -> . N_ENTERO
    (43) elemento -> . N_DECIMAL
    (44) elemento -> . N_BINARIO
    (45) elemento -> . VARIABLE
    (46) elemento -> . CADENA

    N_ENTERO        shift and go to state 29
    N_DECIMAL       shift and go to state 30
    N_BINARIO       shift and go to state 31
    VARIABLE        shift and go to state 32
    CADENA          shift and go to state 33

    comparacion                    shift and go to state 61
    elemento                       shift and go to state 28

state 44

    (22) condicion -> condicion AND . comparacion
    (24) comparacion -> . elemento comparador elemento
    (25) comparacion -> . elemento
    (42) elemento -> . N_ENTERO
    (43) elemento -> . N_DECIMAL
    (44) elemento -> . N_BINARIO
    (45) elemento -> . VARIABLE
    (46) elemento -> . CADENA

    N_ENTERO        shift and go to state 29
    N_DECIMAL       shift and go to state 30
    N_BINARIO       shift and go to state 31
    VARIABLE        shift and go to state 32
    CADENA          shift and go to state 33

    comparacion                    shift and go to state 62
    elemento                       shift and go to state 28

state 45

    (24) comparacion -> elemento comparador . elemento
    (42) elemento -> . N_ENTERO
    (43) elemento -> . N_DECIMAL
    (44) elemento -> . N_BINARIO
    (45) elemento -> . VARIABLE
    (46) elemento -> . CADENA

    N_ENTERO        shift and go to state 29
    N_DECIMAL       shift and go to state 30
    N_BINARIO       shift and go to state 31
    VARIABLE        shift and go to state 32
    CADENA          shift and go to state 33

    elemento                       shift and go to state 63

state 46

    (26) comparador -> MENORI .

    N_ENTERO        reduce using rule 26 (comparador -> MENORI .)
    N_DECIMAL       reduce using rule 26 (comparador -> MENORI .)
    N_BINARIO       reduce using rule 26 (comparador -> MENORI .)
    VARIABLE        reduce using rule 26 (comparador -> MENORI .)
    CADENA          reduce using rule 26 (comparador -> MENORI .)


state 47

    (27) comparador -> MENORQ .

    N_ENTERO        reduce using rule 27 (comparador -> MENORQ .)
    N_DECIMAL       reduce using rule 27 (comparador -> MENORQ .)
    N_BINARIO       reduce using rule 27 (comparador -> MENORQ .)
    VARIABLE        reduce using rule 27 (comparador -> MENORQ .)
    CADENA          reduce using rule 27 (comparador -> MENORQ .)


state 48

    (28) comparador -> MAYORQ .

    N_ENTERO        reduce using rule 28 (comparador -> MAYORQ .)
    N_DECIMAL       reduce using rule 28 (comparador -> MAYORQ .)
    N_BINARIO       reduce using rule 28 (comparador -> MAYORQ .)
    VARIABLE        reduce using rule 28 (comparador -> MAYORQ .)
    CADENA          reduce using rule 28 (comparador -> MAYORQ .)


state 49

    (29) comparador -> MAYORI .

    N_ENTERO        reduce using rule 29 (comparador -> MAYORI .)
    N_DECIMAL       reduce using rule 29 (comparador -> MAYORI .)
    N_BINARIO       reduce using rule 29 (comparador -> MAYORI .)
    VARIABLE        reduce using rule 29 (comparador -> MAYORI .)
    CADENA          reduce using rule 29 (comparador -> MAYORI .)


state 50

    (30) comparador -> IGUALI .

    N_ENTERO        reduce using rule 30 (comparador -> IGUALI .)
    N_DECIMAL       reduce using rule 30 (comparador -> IGUALI .)
    N_BINARIO       reduce using rule 30 (comparador -> IGUALI .)
    VARIABLE        reduce using rule 30 (comparador -> IGUALI .)
    CADENA          reduce using rule 30 (comparador -> IGUALI .)


state 51

    (18) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS . bloque
    (19) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS . bloque ELSE bloque
    (31) bloque -> . A_LLAVE programa C_LLAVE

    A_LLAVE         shift and go to state 60

    bloque                         shift and go to state 64

state 52

    (8) bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .

    VARIABLE        reduce using rule 8 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    WHILE           reduce using rule 8 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    IF              reduce using rule 8 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    INIT            reduce using rule 8 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    SUMA_LOS_ULTIMOS reduce using rule 8 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    $end            reduce using rule 8 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    C_LLAVE         reduce using rule 8 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)


state 53

    (9) declaraciones -> declaracion declaraciones .

    C_LLAVE         reduce using rule 9 (declaraciones -> declaracion declaraciones .)


state 54

    (11) declaracion -> lista_variables DOS_PUNTOS . tipo_dato
    (12) declaracion -> lista_variables DOS_PUNTOS . tipo_dato declaracion
    (15) tipo_dato -> . FLOAT
    (16) tipo_dato -> . INT
    (17) tipo_dato -> . STR

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STR             shift and go to state 68

    tipo_dato                      shift and go to state 65

state 55

    (14) lista_variables -> VARIABLE COMA . lista_variables
    (13) lista_variables -> . VARIABLE
    (14) lista_variables -> . VARIABLE COMA lista_variables

    VARIABLE        shift and go to state 38

    lista_variables                shift and go to state 69

state 56

    (38) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA . lista C_PARENTESIS
    (39) lista -> . A_CORCHETE elementos C_CORCHETE

    A_CORCHETE      shift and go to state 25

    lista                          shift and go to state 70

state 57

    (39) lista -> A_CORCHETE elementos C_CORCHETE .

    VARIABLE        reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)
    WHILE           reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)
    IF              reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)
    INIT            reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)
    SUMA_LOS_ULTIMOS reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)
    $end            reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)
    C_LLAVE         reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)
    C_PARENTESIS    reduce using rule 39 (lista -> A_CORCHETE elementos C_CORCHETE .)


state 58

    (40) elementos -> elementos COMA . elemento
    (42) elemento -> . N_ENTERO
    (43) elemento -> . N_DECIMAL
    (44) elemento -> . N_BINARIO
    (45) elemento -> . VARIABLE
    (46) elemento -> . CADENA

    N_ENTERO        shift and go to state 29
    N_DECIMAL       shift and go to state 30
    N_BINARIO       shift and go to state 31
    VARIABLE        shift and go to state 32
    CADENA          shift and go to state 33

    elemento                       shift and go to state 71

state 59

    (20) iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .

    VARIABLE        reduce using rule 20 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    WHILE           reduce using rule 20 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    IF              reduce using rule 20 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    INIT            reduce using rule 20 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    SUMA_LOS_ULTIMOS reduce using rule 20 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    $end            reduce using rule 20 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    C_LLAVE         reduce using rule 20 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)


state 60

    (31) bloque -> A_LLAVE . programa C_LLAVE
    (1) programa -> . sentencia programa
    (2) programa -> . sentencia
    (3) sentencia -> . asignacion
    (4) sentencia -> . iteracion
    (5) sentencia -> . seleccion
    (6) sentencia -> . bloque_declaracion
    (7) sentencia -> . suma_los_ultimos
    (32) asignacion -> . VARIABLE ASIGNACION VARIABLE
    (33) asignacion -> . VARIABLE ASIGNACION N_ENTERO
    (34) asignacion -> . VARIABLE ASIGNACION N_DECIMAL
    (35) asignacion -> . VARIABLE ASIGNACION CADENA
    (36) asignacion -> . VARIABLE ASIGNACION N_BINARIO
    (37) asignacion -> . VARIABLE ASIGNACION lista
    (20) iteracion -> . WHILE A_PARENTESIS condicion C_PARENTESIS bloque
    (18) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque
    (19) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
    (8) bloque_declaracion -> . INIT A_LLAVE declaraciones C_LLAVE
    (38) suma_los_ultimos -> . SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    VARIABLE        shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    INIT            shift and go to state 11
    SUMA_LOS_ULTIMOS shift and go to state 12

    programa                       shift and go to state 72
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    iteracion                      shift and go to state 4
    seleccion                      shift and go to state 5
    bloque_declaracion             shift and go to state 6
    suma_los_ultimos               shift and go to state 7

state 61

    (21) condicion -> condicion OR comparacion .

    C_PARENTESIS    reduce using rule 21 (condicion -> condicion OR comparacion .)
    OR              reduce using rule 21 (condicion -> condicion OR comparacion .)
    AND             reduce using rule 21 (condicion -> condicion OR comparacion .)


state 62

    (22) condicion -> condicion AND comparacion .

    C_PARENTESIS    reduce using rule 22 (condicion -> condicion AND comparacion .)
    OR              reduce using rule 22 (condicion -> condicion AND comparacion .)
    AND             reduce using rule 22 (condicion -> condicion AND comparacion .)


state 63

    (24) comparacion -> elemento comparador elemento .

    C_PARENTESIS    reduce using rule 24 (comparacion -> elemento comparador elemento .)
    OR              reduce using rule 24 (comparacion -> elemento comparador elemento .)
    AND             reduce using rule 24 (comparacion -> elemento comparador elemento .)


state 64

    (18) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .
    (19) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque . ELSE bloque

    VARIABLE        reduce using rule 18 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    WHILE           reduce using rule 18 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    IF              reduce using rule 18 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    INIT            reduce using rule 18 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    SUMA_LOS_ULTIMOS reduce using rule 18 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    $end            reduce using rule 18 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    C_LLAVE         reduce using rule 18 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    ELSE            shift and go to state 73


state 65

    (11) declaracion -> lista_variables DOS_PUNTOS tipo_dato .
    (12) declaracion -> lista_variables DOS_PUNTOS tipo_dato . declaracion
    (11) declaracion -> . lista_variables DOS_PUNTOS tipo_dato
    (12) declaracion -> . lista_variables DOS_PUNTOS tipo_dato declaracion
    (13) lista_variables -> . VARIABLE
    (14) lista_variables -> . VARIABLE COMA lista_variables

  ! shift/reduce conflict for VARIABLE resolved as shift
    C_LLAVE         reduce using rule 11 (declaracion -> lista_variables DOS_PUNTOS tipo_dato .)
    VARIABLE        shift and go to state 38

  ! VARIABLE        [ reduce using rule 11 (declaracion -> lista_variables DOS_PUNTOS tipo_dato .) ]

    lista_variables                shift and go to state 37
    declaracion                    shift and go to state 74

state 66

    (15) tipo_dato -> FLOAT .

    VARIABLE        reduce using rule 15 (tipo_dato -> FLOAT .)
    C_LLAVE         reduce using rule 15 (tipo_dato -> FLOAT .)


state 67

    (16) tipo_dato -> INT .

    VARIABLE        reduce using rule 16 (tipo_dato -> INT .)
    C_LLAVE         reduce using rule 16 (tipo_dato -> INT .)


state 68

    (17) tipo_dato -> STR .

    VARIABLE        reduce using rule 17 (tipo_dato -> STR .)
    C_LLAVE         reduce using rule 17 (tipo_dato -> STR .)


state 69

    (14) lista_variables -> VARIABLE COMA lista_variables .

    DOS_PUNTOS      reduce using rule 14 (lista_variables -> VARIABLE COMA lista_variables .)


state 70

    (38) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista . C_PARENTESIS

    C_PARENTESIS    shift and go to state 75


state 71

    (40) elementos -> elementos COMA elemento .

    C_CORCHETE      reduce using rule 40 (elementos -> elementos COMA elemento .)
    COMA            reduce using rule 40 (elementos -> elementos COMA elemento .)


state 72

    (31) bloque -> A_LLAVE programa . C_LLAVE

    C_LLAVE         shift and go to state 76


state 73

    (19) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE . bloque
    (31) bloque -> . A_LLAVE programa C_LLAVE

    A_LLAVE         shift and go to state 60

    bloque                         shift and go to state 77

state 74

    (12) declaracion -> lista_variables DOS_PUNTOS tipo_dato declaracion .

    VARIABLE        reduce using rule 12 (declaracion -> lista_variables DOS_PUNTOS tipo_dato declaracion .)
    C_LLAVE         reduce using rule 12 (declaracion -> lista_variables DOS_PUNTOS tipo_dato declaracion .)


state 75

    (38) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .

    VARIABLE        reduce using rule 38 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    WHILE           reduce using rule 38 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    IF              reduce using rule 38 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    INIT            reduce using rule 38 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    SUMA_LOS_ULTIMOS reduce using rule 38 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    $end            reduce using rule 38 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    C_LLAVE         reduce using rule 38 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)


state 76

    (31) bloque -> A_LLAVE programa C_LLAVE .

    VARIABLE        reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)
    WHILE           reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)
    IF              reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)
    INIT            reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)
    SUMA_LOS_ULTIMOS reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)
    $end            reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)
    C_LLAVE         reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)
    ELSE            reduce using rule 31 (bloque -> A_LLAVE programa C_LLAVE .)


state 77

    (19) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .

    VARIABLE        reduce using rule 19 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    WHILE           reduce using rule 19 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    IF              reduce using rule 19 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    INIT            reduce using rule 19 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    SUMA_LOS_ULTIMOS reduce using rule 19 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    $end            reduce using rule 19 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    C_LLAVE         reduce using rule 19 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
