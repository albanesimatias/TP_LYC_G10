Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIVISION
    MULTIPLICACION
    RESTA
    SUMA

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencia programa
Rule 2     programa -> sentencia
Rule 3     sentencia -> asignacion
Rule 4     sentencia -> iteracion
Rule 5     sentencia -> seleccion
Rule 6     sentencia -> bloque_declaracion
Rule 7     sentencia -> read
Rule 8     sentencia -> write
Rule 9     sentencia -> suma_los_ultimos
Rule 10    read -> READ A_PARENTESIS elemento C_PARENTESIS
Rule 11    write -> WRITE A_PARENTESIS elemento C_PARENTESIS
Rule 12    bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE
Rule 13    declaraciones -> declaraciones declaracion
Rule 14    declaraciones -> declaracion
Rule 15    declaracion -> lista_variables DOS_PUNTOS tipo_dato
Rule 16    lista_variables -> VARIABLE
Rule 17    lista_variables -> lista_variables COMA VARIABLE
Rule 18    tipo_dato -> FLOAT
Rule 19    tipo_dato -> INT
Rule 20    tipo_dato -> STR
Rule 21    seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque
Rule 22    seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
Rule 23    iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque
Rule 24    condicion -> comparacion OR comparacion
Rule 25    condicion -> comparacion AND comparacion
Rule 26    condicion -> NOT comparacion
Rule 27    condicion -> comparacion
Rule 28    comparacion -> elemento comparador elemento
Rule 29    comparacion -> elemento
Rule 30    comparador -> MENORI
Rule 31    comparador -> MENORQ
Rule 32    comparador -> MAYORQ
Rule 33    comparador -> MAYORI
Rule 34    comparador -> IGUALI
Rule 35    comparador -> DISTINTOQ
Rule 36    bloque -> A_LLAVE programa C_LLAVE
Rule 37    asignacion -> VARIABLE ASIGNACION elemento
Rule 38    asignacion -> VARIABLE ASIGNACION lista
Rule 39    suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS
Rule 40    lista -> A_CORCHETE elementos C_CORCHETE
Rule 41    lista -> A_CORCHETE C_CORCHETE
Rule 42    elementos -> elementos COMA elemento
Rule 43    elementos -> elemento
Rule 44    elemento -> N_ENTERO
Rule 45    elemento -> N_DECIMAL
Rule 46    elemento -> N_BINARIO
Rule 47    elemento -> VARIABLE
Rule 48    elemento -> CADENA

Terminals, with rules where they appear

AND                  : 25
ASIGNACION           : 37 38
A_CORCHETE           : 40 41
A_LLAVE              : 12 36
A_PARENTESIS         : 10 11 21 22 23 39
CADENA               : 48
COMA                 : 17 42
C_CORCHETE           : 40 41
C_LLAVE              : 12 36
C_PARENTESIS         : 10 11 21 22 23 39
DISTINTOQ            : 35
DIVISION             : 
DOS_PUNTOS           : 15
ELSE                 : 22
FLOAT                : 18
IF                   : 21 22
IGUALI               : 34
INIT                 : 12
INT                  : 19
MAYORI               : 33
MAYORQ               : 32
MENORI               : 30
MENORQ               : 31
MULTIPLICACION       : 
NOT                  : 26
N_BINARIO            : 46
N_DECIMAL            : 45
N_ENTERO             : 39 44
OR                   : 24
PUNTO_Y_COMA         : 39
READ                 : 10
RESTA                : 
STR                  : 20
SUMA                 : 
SUMA_LOS_ULTIMOS     : 39
VARIABLE             : 16 17 37 38 47
WHILE                : 23
WRITE                : 11
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
bloque               : 21 22 22 23
bloque_declaracion   : 6
comparacion          : 24 24 25 25 26 27
comparador           : 28
condicion            : 21 22 23
declaracion          : 13 14
declaraciones        : 12 13
elemento             : 10 11 28 28 29 37 42 43
elementos            : 40 42
iteracion            : 4
lista                : 38 39
lista_variables      : 15 17
programa             : 1 36 0
read                 : 7
seleccion            : 5
sentencia            : 1 2
suma_los_ultimos     : 9
tipo_dato            : 15
write                : 8

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . sentencia programa
    (2) programa -> . sentencia
    (3) sentencia -> . asignacion
    (4) sentencia -> . iteracion
    (5) sentencia -> . seleccion
    (6) sentencia -> . bloque_declaracion
    (7) sentencia -> . read
    (8) sentencia -> . write
    (9) sentencia -> . suma_los_ultimos
    (37) asignacion -> . VARIABLE ASIGNACION elemento
    (38) asignacion -> . VARIABLE ASIGNACION lista
    (23) iteracion -> . WHILE A_PARENTESIS condicion C_PARENTESIS bloque
    (21) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque
    (22) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
    (12) bloque_declaracion -> . INIT A_LLAVE declaraciones C_LLAVE
    (10) read -> . READ A_PARENTESIS elemento C_PARENTESIS
    (11) write -> . WRITE A_PARENTESIS elemento C_PARENTESIS
    (39) suma_los_ultimos -> . SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    VARIABLE        shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    INIT            shift and go to state 13
    READ            shift and go to state 14
    WRITE           shift and go to state 15
    SUMA_LOS_ULTIMOS shift and go to state 16

    programa                       shift and go to state 1
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    iteracion                      shift and go to state 4
    seleccion                      shift and go to state 5
    bloque_declaracion             shift and go to state 6
    read                           shift and go to state 7
    write                          shift and go to state 8
    suma_los_ultimos               shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> sentencia . programa
    (2) programa -> sentencia .
    (1) programa -> . sentencia programa
    (2) programa -> . sentencia
    (3) sentencia -> . asignacion
    (4) sentencia -> . iteracion
    (5) sentencia -> . seleccion
    (6) sentencia -> . bloque_declaracion
    (7) sentencia -> . read
    (8) sentencia -> . write
    (9) sentencia -> . suma_los_ultimos
    (37) asignacion -> . VARIABLE ASIGNACION elemento
    (38) asignacion -> . VARIABLE ASIGNACION lista
    (23) iteracion -> . WHILE A_PARENTESIS condicion C_PARENTESIS bloque
    (21) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque
    (22) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
    (12) bloque_declaracion -> . INIT A_LLAVE declaraciones C_LLAVE
    (10) read -> . READ A_PARENTESIS elemento C_PARENTESIS
    (11) write -> . WRITE A_PARENTESIS elemento C_PARENTESIS
    (39) suma_los_ultimos -> . SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    $end            reduce using rule 2 (programa -> sentencia .)
    C_LLAVE         reduce using rule 2 (programa -> sentencia .)
    VARIABLE        shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    INIT            shift and go to state 13
    READ            shift and go to state 14
    WRITE           shift and go to state 15
    SUMA_LOS_ULTIMOS shift and go to state 16

    sentencia                      shift and go to state 2
    programa                       shift and go to state 17
    asignacion                     shift and go to state 3
    iteracion                      shift and go to state 4
    seleccion                      shift and go to state 5
    bloque_declaracion             shift and go to state 6
    read                           shift and go to state 7
    write                          shift and go to state 8
    suma_los_ultimos               shift and go to state 9

state 3

    (3) sentencia -> asignacion .

    VARIABLE        reduce using rule 3 (sentencia -> asignacion .)
    WHILE           reduce using rule 3 (sentencia -> asignacion .)
    IF              reduce using rule 3 (sentencia -> asignacion .)
    INIT            reduce using rule 3 (sentencia -> asignacion .)
    READ            reduce using rule 3 (sentencia -> asignacion .)
    WRITE           reduce using rule 3 (sentencia -> asignacion .)
    SUMA_LOS_ULTIMOS reduce using rule 3 (sentencia -> asignacion .)
    $end            reduce using rule 3 (sentencia -> asignacion .)
    C_LLAVE         reduce using rule 3 (sentencia -> asignacion .)


state 4

    (4) sentencia -> iteracion .

    VARIABLE        reduce using rule 4 (sentencia -> iteracion .)
    WHILE           reduce using rule 4 (sentencia -> iteracion .)
    IF              reduce using rule 4 (sentencia -> iteracion .)
    INIT            reduce using rule 4 (sentencia -> iteracion .)
    READ            reduce using rule 4 (sentencia -> iteracion .)
    WRITE           reduce using rule 4 (sentencia -> iteracion .)
    SUMA_LOS_ULTIMOS reduce using rule 4 (sentencia -> iteracion .)
    $end            reduce using rule 4 (sentencia -> iteracion .)
    C_LLAVE         reduce using rule 4 (sentencia -> iteracion .)


state 5

    (5) sentencia -> seleccion .

    VARIABLE        reduce using rule 5 (sentencia -> seleccion .)
    WHILE           reduce using rule 5 (sentencia -> seleccion .)
    IF              reduce using rule 5 (sentencia -> seleccion .)
    INIT            reduce using rule 5 (sentencia -> seleccion .)
    READ            reduce using rule 5 (sentencia -> seleccion .)
    WRITE           reduce using rule 5 (sentencia -> seleccion .)
    SUMA_LOS_ULTIMOS reduce using rule 5 (sentencia -> seleccion .)
    $end            reduce using rule 5 (sentencia -> seleccion .)
    C_LLAVE         reduce using rule 5 (sentencia -> seleccion .)


state 6

    (6) sentencia -> bloque_declaracion .

    VARIABLE        reduce using rule 6 (sentencia -> bloque_declaracion .)
    WHILE           reduce using rule 6 (sentencia -> bloque_declaracion .)
    IF              reduce using rule 6 (sentencia -> bloque_declaracion .)
    INIT            reduce using rule 6 (sentencia -> bloque_declaracion .)
    READ            reduce using rule 6 (sentencia -> bloque_declaracion .)
    WRITE           reduce using rule 6 (sentencia -> bloque_declaracion .)
    SUMA_LOS_ULTIMOS reduce using rule 6 (sentencia -> bloque_declaracion .)
    $end            reduce using rule 6 (sentencia -> bloque_declaracion .)
    C_LLAVE         reduce using rule 6 (sentencia -> bloque_declaracion .)


state 7

    (7) sentencia -> read .

    VARIABLE        reduce using rule 7 (sentencia -> read .)
    WHILE           reduce using rule 7 (sentencia -> read .)
    IF              reduce using rule 7 (sentencia -> read .)
    INIT            reduce using rule 7 (sentencia -> read .)
    READ            reduce using rule 7 (sentencia -> read .)
    WRITE           reduce using rule 7 (sentencia -> read .)
    SUMA_LOS_ULTIMOS reduce using rule 7 (sentencia -> read .)
    $end            reduce using rule 7 (sentencia -> read .)
    C_LLAVE         reduce using rule 7 (sentencia -> read .)


state 8

    (8) sentencia -> write .

    VARIABLE        reduce using rule 8 (sentencia -> write .)
    WHILE           reduce using rule 8 (sentencia -> write .)
    IF              reduce using rule 8 (sentencia -> write .)
    INIT            reduce using rule 8 (sentencia -> write .)
    READ            reduce using rule 8 (sentencia -> write .)
    WRITE           reduce using rule 8 (sentencia -> write .)
    SUMA_LOS_ULTIMOS reduce using rule 8 (sentencia -> write .)
    $end            reduce using rule 8 (sentencia -> write .)
    C_LLAVE         reduce using rule 8 (sentencia -> write .)


state 9

    (9) sentencia -> suma_los_ultimos .

    VARIABLE        reduce using rule 9 (sentencia -> suma_los_ultimos .)
    WHILE           reduce using rule 9 (sentencia -> suma_los_ultimos .)
    IF              reduce using rule 9 (sentencia -> suma_los_ultimos .)
    INIT            reduce using rule 9 (sentencia -> suma_los_ultimos .)
    READ            reduce using rule 9 (sentencia -> suma_los_ultimos .)
    WRITE           reduce using rule 9 (sentencia -> suma_los_ultimos .)
    SUMA_LOS_ULTIMOS reduce using rule 9 (sentencia -> suma_los_ultimos .)
    $end            reduce using rule 9 (sentencia -> suma_los_ultimos .)
    C_LLAVE         reduce using rule 9 (sentencia -> suma_los_ultimos .)


state 10

    (37) asignacion -> VARIABLE . ASIGNACION elemento
    (38) asignacion -> VARIABLE . ASIGNACION lista

    ASIGNACION      shift and go to state 18


state 11

    (23) iteracion -> WHILE . A_PARENTESIS condicion C_PARENTESIS bloque

    A_PARENTESIS    shift and go to state 19


state 12

    (21) seleccion -> IF . A_PARENTESIS condicion C_PARENTESIS bloque
    (22) seleccion -> IF . A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque

    A_PARENTESIS    shift and go to state 20


state 13

    (12) bloque_declaracion -> INIT . A_LLAVE declaraciones C_LLAVE

    A_LLAVE         shift and go to state 21


state 14

    (10) read -> READ . A_PARENTESIS elemento C_PARENTESIS

    A_PARENTESIS    shift and go to state 22


state 15

    (11) write -> WRITE . A_PARENTESIS elemento C_PARENTESIS

    A_PARENTESIS    shift and go to state 23


state 16

    (39) suma_los_ultimos -> SUMA_LOS_ULTIMOS . A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    A_PARENTESIS    shift and go to state 24


state 17

    (1) programa -> sentencia programa .

    $end            reduce using rule 1 (programa -> sentencia programa .)
    C_LLAVE         reduce using rule 1 (programa -> sentencia programa .)


state 18

    (37) asignacion -> VARIABLE ASIGNACION . elemento
    (38) asignacion -> VARIABLE ASIGNACION . lista
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA
    (40) lista -> . A_CORCHETE elementos C_CORCHETE
    (41) lista -> . A_CORCHETE C_CORCHETE

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31
    A_CORCHETE      shift and go to state 32

    elemento                       shift and go to state 26
    lista                          shift and go to state 27

state 19

    (23) iteracion -> WHILE A_PARENTESIS . condicion C_PARENTESIS bloque
    (24) condicion -> . comparacion OR comparacion
    (25) condicion -> . comparacion AND comparacion
    (26) condicion -> . NOT comparacion
    (27) condicion -> . comparacion
    (28) comparacion -> . elemento comparador elemento
    (29) comparacion -> . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    NOT             shift and go to state 35
    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    condicion                      shift and go to state 33
    comparacion                    shift and go to state 34
    elemento                       shift and go to state 36

state 20

    (21) seleccion -> IF A_PARENTESIS . condicion C_PARENTESIS bloque
    (22) seleccion -> IF A_PARENTESIS . condicion C_PARENTESIS bloque ELSE bloque
    (24) condicion -> . comparacion OR comparacion
    (25) condicion -> . comparacion AND comparacion
    (26) condicion -> . NOT comparacion
    (27) condicion -> . comparacion
    (28) comparacion -> . elemento comparador elemento
    (29) comparacion -> . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    NOT             shift and go to state 35
    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    condicion                      shift and go to state 37
    comparacion                    shift and go to state 34
    elemento                       shift and go to state 36

state 21

    (12) bloque_declaracion -> INIT A_LLAVE . declaraciones C_LLAVE
    (13) declaraciones -> . declaraciones declaracion
    (14) declaraciones -> . declaracion
    (15) declaracion -> . lista_variables DOS_PUNTOS tipo_dato
    (16) lista_variables -> . VARIABLE
    (17) lista_variables -> . lista_variables COMA VARIABLE

    VARIABLE        shift and go to state 41

    declaraciones                  shift and go to state 38
    declaracion                    shift and go to state 39
    lista_variables                shift and go to state 40

state 22

    (10) read -> READ A_PARENTESIS . elemento C_PARENTESIS
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    elemento                       shift and go to state 42

state 23

    (11) write -> WRITE A_PARENTESIS . elemento C_PARENTESIS
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    elemento                       shift and go to state 43

state 24

    (39) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS . N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    N_ENTERO        shift and go to state 44


state 25

    (47) elemento -> VARIABLE .

    VARIABLE        reduce using rule 47 (elemento -> VARIABLE .)
    WHILE           reduce using rule 47 (elemento -> VARIABLE .)
    IF              reduce using rule 47 (elemento -> VARIABLE .)
    INIT            reduce using rule 47 (elemento -> VARIABLE .)
    READ            reduce using rule 47 (elemento -> VARIABLE .)
    WRITE           reduce using rule 47 (elemento -> VARIABLE .)
    SUMA_LOS_ULTIMOS reduce using rule 47 (elemento -> VARIABLE .)
    $end            reduce using rule 47 (elemento -> VARIABLE .)
    C_LLAVE         reduce using rule 47 (elemento -> VARIABLE .)
    MENORI          reduce using rule 47 (elemento -> VARIABLE .)
    MENORQ          reduce using rule 47 (elemento -> VARIABLE .)
    MAYORQ          reduce using rule 47 (elemento -> VARIABLE .)
    MAYORI          reduce using rule 47 (elemento -> VARIABLE .)
    IGUALI          reduce using rule 47 (elemento -> VARIABLE .)
    DISTINTOQ       reduce using rule 47 (elemento -> VARIABLE .)
    OR              reduce using rule 47 (elemento -> VARIABLE .)
    AND             reduce using rule 47 (elemento -> VARIABLE .)
    C_PARENTESIS    reduce using rule 47 (elemento -> VARIABLE .)
    C_CORCHETE      reduce using rule 47 (elemento -> VARIABLE .)
    COMA            reduce using rule 47 (elemento -> VARIABLE .)


state 26

    (37) asignacion -> VARIABLE ASIGNACION elemento .

    VARIABLE        reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    WHILE           reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    IF              reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    INIT            reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    READ            reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    WRITE           reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    SUMA_LOS_ULTIMOS reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    $end            reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)
    C_LLAVE         reduce using rule 37 (asignacion -> VARIABLE ASIGNACION elemento .)


state 27

    (38) asignacion -> VARIABLE ASIGNACION lista .

    VARIABLE        reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    WHILE           reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    IF              reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    INIT            reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    READ            reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    WRITE           reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    SUMA_LOS_ULTIMOS reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    $end            reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)
    C_LLAVE         reduce using rule 38 (asignacion -> VARIABLE ASIGNACION lista .)


state 28

    (44) elemento -> N_ENTERO .

    VARIABLE        reduce using rule 44 (elemento -> N_ENTERO .)
    WHILE           reduce using rule 44 (elemento -> N_ENTERO .)
    IF              reduce using rule 44 (elemento -> N_ENTERO .)
    INIT            reduce using rule 44 (elemento -> N_ENTERO .)
    READ            reduce using rule 44 (elemento -> N_ENTERO .)
    WRITE           reduce using rule 44 (elemento -> N_ENTERO .)
    SUMA_LOS_ULTIMOS reduce using rule 44 (elemento -> N_ENTERO .)
    $end            reduce using rule 44 (elemento -> N_ENTERO .)
    C_LLAVE         reduce using rule 44 (elemento -> N_ENTERO .)
    MENORI          reduce using rule 44 (elemento -> N_ENTERO .)
    MENORQ          reduce using rule 44 (elemento -> N_ENTERO .)
    MAYORQ          reduce using rule 44 (elemento -> N_ENTERO .)
    MAYORI          reduce using rule 44 (elemento -> N_ENTERO .)
    IGUALI          reduce using rule 44 (elemento -> N_ENTERO .)
    DISTINTOQ       reduce using rule 44 (elemento -> N_ENTERO .)
    OR              reduce using rule 44 (elemento -> N_ENTERO .)
    AND             reduce using rule 44 (elemento -> N_ENTERO .)
    C_PARENTESIS    reduce using rule 44 (elemento -> N_ENTERO .)
    C_CORCHETE      reduce using rule 44 (elemento -> N_ENTERO .)
    COMA            reduce using rule 44 (elemento -> N_ENTERO .)


state 29

    (45) elemento -> N_DECIMAL .

    VARIABLE        reduce using rule 45 (elemento -> N_DECIMAL .)
    WHILE           reduce using rule 45 (elemento -> N_DECIMAL .)
    IF              reduce using rule 45 (elemento -> N_DECIMAL .)
    INIT            reduce using rule 45 (elemento -> N_DECIMAL .)
    READ            reduce using rule 45 (elemento -> N_DECIMAL .)
    WRITE           reduce using rule 45 (elemento -> N_DECIMAL .)
    SUMA_LOS_ULTIMOS reduce using rule 45 (elemento -> N_DECIMAL .)
    $end            reduce using rule 45 (elemento -> N_DECIMAL .)
    C_LLAVE         reduce using rule 45 (elemento -> N_DECIMAL .)
    MENORI          reduce using rule 45 (elemento -> N_DECIMAL .)
    MENORQ          reduce using rule 45 (elemento -> N_DECIMAL .)
    MAYORQ          reduce using rule 45 (elemento -> N_DECIMAL .)
    MAYORI          reduce using rule 45 (elemento -> N_DECIMAL .)
    IGUALI          reduce using rule 45 (elemento -> N_DECIMAL .)
    DISTINTOQ       reduce using rule 45 (elemento -> N_DECIMAL .)
    OR              reduce using rule 45 (elemento -> N_DECIMAL .)
    AND             reduce using rule 45 (elemento -> N_DECIMAL .)
    C_PARENTESIS    reduce using rule 45 (elemento -> N_DECIMAL .)
    C_CORCHETE      reduce using rule 45 (elemento -> N_DECIMAL .)
    COMA            reduce using rule 45 (elemento -> N_DECIMAL .)


state 30

    (46) elemento -> N_BINARIO .

    VARIABLE        reduce using rule 46 (elemento -> N_BINARIO .)
    WHILE           reduce using rule 46 (elemento -> N_BINARIO .)
    IF              reduce using rule 46 (elemento -> N_BINARIO .)
    INIT            reduce using rule 46 (elemento -> N_BINARIO .)
    READ            reduce using rule 46 (elemento -> N_BINARIO .)
    WRITE           reduce using rule 46 (elemento -> N_BINARIO .)
    SUMA_LOS_ULTIMOS reduce using rule 46 (elemento -> N_BINARIO .)
    $end            reduce using rule 46 (elemento -> N_BINARIO .)
    C_LLAVE         reduce using rule 46 (elemento -> N_BINARIO .)
    MENORI          reduce using rule 46 (elemento -> N_BINARIO .)
    MENORQ          reduce using rule 46 (elemento -> N_BINARIO .)
    MAYORQ          reduce using rule 46 (elemento -> N_BINARIO .)
    MAYORI          reduce using rule 46 (elemento -> N_BINARIO .)
    IGUALI          reduce using rule 46 (elemento -> N_BINARIO .)
    DISTINTOQ       reduce using rule 46 (elemento -> N_BINARIO .)
    OR              reduce using rule 46 (elemento -> N_BINARIO .)
    AND             reduce using rule 46 (elemento -> N_BINARIO .)
    C_PARENTESIS    reduce using rule 46 (elemento -> N_BINARIO .)
    C_CORCHETE      reduce using rule 46 (elemento -> N_BINARIO .)
    COMA            reduce using rule 46 (elemento -> N_BINARIO .)


state 31

    (48) elemento -> CADENA .

    VARIABLE        reduce using rule 48 (elemento -> CADENA .)
    WHILE           reduce using rule 48 (elemento -> CADENA .)
    IF              reduce using rule 48 (elemento -> CADENA .)
    INIT            reduce using rule 48 (elemento -> CADENA .)
    READ            reduce using rule 48 (elemento -> CADENA .)
    WRITE           reduce using rule 48 (elemento -> CADENA .)
    SUMA_LOS_ULTIMOS reduce using rule 48 (elemento -> CADENA .)
    $end            reduce using rule 48 (elemento -> CADENA .)
    C_LLAVE         reduce using rule 48 (elemento -> CADENA .)
    MENORI          reduce using rule 48 (elemento -> CADENA .)
    MENORQ          reduce using rule 48 (elemento -> CADENA .)
    MAYORQ          reduce using rule 48 (elemento -> CADENA .)
    MAYORI          reduce using rule 48 (elemento -> CADENA .)
    IGUALI          reduce using rule 48 (elemento -> CADENA .)
    DISTINTOQ       reduce using rule 48 (elemento -> CADENA .)
    OR              reduce using rule 48 (elemento -> CADENA .)
    AND             reduce using rule 48 (elemento -> CADENA .)
    C_PARENTESIS    reduce using rule 48 (elemento -> CADENA .)
    C_CORCHETE      reduce using rule 48 (elemento -> CADENA .)
    COMA            reduce using rule 48 (elemento -> CADENA .)


state 32

    (40) lista -> A_CORCHETE . elementos C_CORCHETE
    (41) lista -> A_CORCHETE . C_CORCHETE
    (42) elementos -> . elementos COMA elemento
    (43) elementos -> . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    C_CORCHETE      shift and go to state 46
    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    elementos                      shift and go to state 45
    elemento                       shift and go to state 47

state 33

    (23) iteracion -> WHILE A_PARENTESIS condicion . C_PARENTESIS bloque

    C_PARENTESIS    shift and go to state 48


state 34

    (24) condicion -> comparacion . OR comparacion
    (25) condicion -> comparacion . AND comparacion
    (27) condicion -> comparacion .

    OR              shift and go to state 49
    AND             shift and go to state 50
    C_PARENTESIS    reduce using rule 27 (condicion -> comparacion .)


state 35

    (26) condicion -> NOT . comparacion
    (28) comparacion -> . elemento comparador elemento
    (29) comparacion -> . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    comparacion                    shift and go to state 51
    elemento                       shift and go to state 36

state 36

    (28) comparacion -> elemento . comparador elemento
    (29) comparacion -> elemento .
    (30) comparador -> . MENORI
    (31) comparador -> . MENORQ
    (32) comparador -> . MAYORQ
    (33) comparador -> . MAYORI
    (34) comparador -> . IGUALI
    (35) comparador -> . DISTINTOQ

    OR              reduce using rule 29 (comparacion -> elemento .)
    AND             reduce using rule 29 (comparacion -> elemento .)
    C_PARENTESIS    reduce using rule 29 (comparacion -> elemento .)
    MENORI          shift and go to state 53
    MENORQ          shift and go to state 54
    MAYORQ          shift and go to state 55
    MAYORI          shift and go to state 56
    IGUALI          shift and go to state 57
    DISTINTOQ       shift and go to state 58

    comparador                     shift and go to state 52

state 37

    (21) seleccion -> IF A_PARENTESIS condicion . C_PARENTESIS bloque
    (22) seleccion -> IF A_PARENTESIS condicion . C_PARENTESIS bloque ELSE bloque

    C_PARENTESIS    shift and go to state 59


state 38

    (12) bloque_declaracion -> INIT A_LLAVE declaraciones . C_LLAVE
    (13) declaraciones -> declaraciones . declaracion
    (15) declaracion -> . lista_variables DOS_PUNTOS tipo_dato
    (16) lista_variables -> . VARIABLE
    (17) lista_variables -> . lista_variables COMA VARIABLE

    C_LLAVE         shift and go to state 60
    VARIABLE        shift and go to state 41

    declaracion                    shift and go to state 61
    lista_variables                shift and go to state 40

state 39

    (14) declaraciones -> declaracion .

    C_LLAVE         reduce using rule 14 (declaraciones -> declaracion .)
    VARIABLE        reduce using rule 14 (declaraciones -> declaracion .)


state 40

    (15) declaracion -> lista_variables . DOS_PUNTOS tipo_dato
    (17) lista_variables -> lista_variables . COMA VARIABLE

    DOS_PUNTOS      shift and go to state 62
    COMA            shift and go to state 63


state 41

    (16) lista_variables -> VARIABLE .

    DOS_PUNTOS      reduce using rule 16 (lista_variables -> VARIABLE .)
    COMA            reduce using rule 16 (lista_variables -> VARIABLE .)


state 42

    (10) read -> READ A_PARENTESIS elemento . C_PARENTESIS

    C_PARENTESIS    shift and go to state 64


state 43

    (11) write -> WRITE A_PARENTESIS elemento . C_PARENTESIS

    C_PARENTESIS    shift and go to state 65


state 44

    (39) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO . PUNTO_Y_COMA lista C_PARENTESIS

    PUNTO_Y_COMA    shift and go to state 66


state 45

    (40) lista -> A_CORCHETE elementos . C_CORCHETE
    (42) elementos -> elementos . COMA elemento

    C_CORCHETE      shift and go to state 67
    COMA            shift and go to state 68


state 46

    (41) lista -> A_CORCHETE C_CORCHETE .

    VARIABLE        reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    WHILE           reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    IF              reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    INIT            reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    READ            reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    WRITE           reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    SUMA_LOS_ULTIMOS reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    $end            reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    C_LLAVE         reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)
    C_PARENTESIS    reduce using rule 41 (lista -> A_CORCHETE C_CORCHETE .)


state 47

    (43) elementos -> elemento .

    C_CORCHETE      reduce using rule 43 (elementos -> elemento .)
    COMA            reduce using rule 43 (elementos -> elemento .)


state 48

    (23) iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS . bloque
    (36) bloque -> . A_LLAVE programa C_LLAVE

    A_LLAVE         shift and go to state 70

    bloque                         shift and go to state 69

state 49

    (24) condicion -> comparacion OR . comparacion
    (28) comparacion -> . elemento comparador elemento
    (29) comparacion -> . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    comparacion                    shift and go to state 71
    elemento                       shift and go to state 36

state 50

    (25) condicion -> comparacion AND . comparacion
    (28) comparacion -> . elemento comparador elemento
    (29) comparacion -> . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    comparacion                    shift and go to state 72
    elemento                       shift and go to state 36

state 51

    (26) condicion -> NOT comparacion .

    C_PARENTESIS    reduce using rule 26 (condicion -> NOT comparacion .)


state 52

    (28) comparacion -> elemento comparador . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    elemento                       shift and go to state 73

state 53

    (30) comparador -> MENORI .

    N_ENTERO        reduce using rule 30 (comparador -> MENORI .)
    N_DECIMAL       reduce using rule 30 (comparador -> MENORI .)
    N_BINARIO       reduce using rule 30 (comparador -> MENORI .)
    VARIABLE        reduce using rule 30 (comparador -> MENORI .)
    CADENA          reduce using rule 30 (comparador -> MENORI .)


state 54

    (31) comparador -> MENORQ .

    N_ENTERO        reduce using rule 31 (comparador -> MENORQ .)
    N_DECIMAL       reduce using rule 31 (comparador -> MENORQ .)
    N_BINARIO       reduce using rule 31 (comparador -> MENORQ .)
    VARIABLE        reduce using rule 31 (comparador -> MENORQ .)
    CADENA          reduce using rule 31 (comparador -> MENORQ .)


state 55

    (32) comparador -> MAYORQ .

    N_ENTERO        reduce using rule 32 (comparador -> MAYORQ .)
    N_DECIMAL       reduce using rule 32 (comparador -> MAYORQ .)
    N_BINARIO       reduce using rule 32 (comparador -> MAYORQ .)
    VARIABLE        reduce using rule 32 (comparador -> MAYORQ .)
    CADENA          reduce using rule 32 (comparador -> MAYORQ .)


state 56

    (33) comparador -> MAYORI .

    N_ENTERO        reduce using rule 33 (comparador -> MAYORI .)
    N_DECIMAL       reduce using rule 33 (comparador -> MAYORI .)
    N_BINARIO       reduce using rule 33 (comparador -> MAYORI .)
    VARIABLE        reduce using rule 33 (comparador -> MAYORI .)
    CADENA          reduce using rule 33 (comparador -> MAYORI .)


state 57

    (34) comparador -> IGUALI .

    N_ENTERO        reduce using rule 34 (comparador -> IGUALI .)
    N_DECIMAL       reduce using rule 34 (comparador -> IGUALI .)
    N_BINARIO       reduce using rule 34 (comparador -> IGUALI .)
    VARIABLE        reduce using rule 34 (comparador -> IGUALI .)
    CADENA          reduce using rule 34 (comparador -> IGUALI .)


state 58

    (35) comparador -> DISTINTOQ .

    N_ENTERO        reduce using rule 35 (comparador -> DISTINTOQ .)
    N_DECIMAL       reduce using rule 35 (comparador -> DISTINTOQ .)
    N_BINARIO       reduce using rule 35 (comparador -> DISTINTOQ .)
    VARIABLE        reduce using rule 35 (comparador -> DISTINTOQ .)
    CADENA          reduce using rule 35 (comparador -> DISTINTOQ .)


state 59

    (21) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS . bloque
    (22) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS . bloque ELSE bloque
    (36) bloque -> . A_LLAVE programa C_LLAVE

    A_LLAVE         shift and go to state 70

    bloque                         shift and go to state 74

state 60

    (12) bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .

    VARIABLE        reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    WHILE           reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    IF              reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    INIT            reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    READ            reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    WRITE           reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    SUMA_LOS_ULTIMOS reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    $end            reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)
    C_LLAVE         reduce using rule 12 (bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE .)


state 61

    (13) declaraciones -> declaraciones declaracion .

    C_LLAVE         reduce using rule 13 (declaraciones -> declaraciones declaracion .)
    VARIABLE        reduce using rule 13 (declaraciones -> declaraciones declaracion .)


state 62

    (15) declaracion -> lista_variables DOS_PUNTOS . tipo_dato
    (18) tipo_dato -> . FLOAT
    (19) tipo_dato -> . INT
    (20) tipo_dato -> . STR

    FLOAT           shift and go to state 76
    INT             shift and go to state 77
    STR             shift and go to state 78

    tipo_dato                      shift and go to state 75

state 63

    (17) lista_variables -> lista_variables COMA . VARIABLE

    VARIABLE        shift and go to state 79


state 64

    (10) read -> READ A_PARENTESIS elemento C_PARENTESIS .

    VARIABLE        reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    WHILE           reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    IF              reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    INIT            reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    READ            reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    WRITE           reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    SUMA_LOS_ULTIMOS reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    $end            reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)
    C_LLAVE         reduce using rule 10 (read -> READ A_PARENTESIS elemento C_PARENTESIS .)


state 65

    (11) write -> WRITE A_PARENTESIS elemento C_PARENTESIS .

    VARIABLE        reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    WHILE           reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    IF              reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    INIT            reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    READ            reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    WRITE           reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    SUMA_LOS_ULTIMOS reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    $end            reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)
    C_LLAVE         reduce using rule 11 (write -> WRITE A_PARENTESIS elemento C_PARENTESIS .)


state 66

    (39) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA . lista C_PARENTESIS
    (40) lista -> . A_CORCHETE elementos C_CORCHETE
    (41) lista -> . A_CORCHETE C_CORCHETE

    A_CORCHETE      shift and go to state 32

    lista                          shift and go to state 80

state 67

    (40) lista -> A_CORCHETE elementos C_CORCHETE .

    VARIABLE        reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    WHILE           reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    IF              reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    INIT            reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    READ            reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    WRITE           reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    SUMA_LOS_ULTIMOS reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    $end            reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    C_LLAVE         reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)
    C_PARENTESIS    reduce using rule 40 (lista -> A_CORCHETE elementos C_CORCHETE .)


state 68

    (42) elementos -> elementos COMA . elemento
    (44) elemento -> . N_ENTERO
    (45) elemento -> . N_DECIMAL
    (46) elemento -> . N_BINARIO
    (47) elemento -> . VARIABLE
    (48) elemento -> . CADENA

    N_ENTERO        shift and go to state 28
    N_DECIMAL       shift and go to state 29
    N_BINARIO       shift and go to state 30
    VARIABLE        shift and go to state 25
    CADENA          shift and go to state 31

    elemento                       shift and go to state 81

state 69

    (23) iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .

    VARIABLE        reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    WHILE           reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    IF              reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    INIT            reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    READ            reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    WRITE           reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    SUMA_LOS_ULTIMOS reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    $end            reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)
    C_LLAVE         reduce using rule 23 (iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque .)


state 70

    (36) bloque -> A_LLAVE . programa C_LLAVE
    (1) programa -> . sentencia programa
    (2) programa -> . sentencia
    (3) sentencia -> . asignacion
    (4) sentencia -> . iteracion
    (5) sentencia -> . seleccion
    (6) sentencia -> . bloque_declaracion
    (7) sentencia -> . read
    (8) sentencia -> . write
    (9) sentencia -> . suma_los_ultimos
    (37) asignacion -> . VARIABLE ASIGNACION elemento
    (38) asignacion -> . VARIABLE ASIGNACION lista
    (23) iteracion -> . WHILE A_PARENTESIS condicion C_PARENTESIS bloque
    (21) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque
    (22) seleccion -> . IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque
    (12) bloque_declaracion -> . INIT A_LLAVE declaraciones C_LLAVE
    (10) read -> . READ A_PARENTESIS elemento C_PARENTESIS
    (11) write -> . WRITE A_PARENTESIS elemento C_PARENTESIS
    (39) suma_los_ultimos -> . SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS

    VARIABLE        shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    INIT            shift and go to state 13
    READ            shift and go to state 14
    WRITE           shift and go to state 15
    SUMA_LOS_ULTIMOS shift and go to state 16

    programa                       shift and go to state 82
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    iteracion                      shift and go to state 4
    seleccion                      shift and go to state 5
    bloque_declaracion             shift and go to state 6
    read                           shift and go to state 7
    write                          shift and go to state 8
    suma_los_ultimos               shift and go to state 9

state 71

    (24) condicion -> comparacion OR comparacion .

    C_PARENTESIS    reduce using rule 24 (condicion -> comparacion OR comparacion .)


state 72

    (25) condicion -> comparacion AND comparacion .

    C_PARENTESIS    reduce using rule 25 (condicion -> comparacion AND comparacion .)


state 73

    (28) comparacion -> elemento comparador elemento .

    OR              reduce using rule 28 (comparacion -> elemento comparador elemento .)
    AND             reduce using rule 28 (comparacion -> elemento comparador elemento .)
    C_PARENTESIS    reduce using rule 28 (comparacion -> elemento comparador elemento .)


state 74

    (21) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .
    (22) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque . ELSE bloque

    VARIABLE        reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    WHILE           reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    IF              reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    INIT            reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    READ            reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    WRITE           reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    SUMA_LOS_ULTIMOS reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    $end            reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    C_LLAVE         reduce using rule 21 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque .)
    ELSE            shift and go to state 83


state 75

    (15) declaracion -> lista_variables DOS_PUNTOS tipo_dato .

    C_LLAVE         reduce using rule 15 (declaracion -> lista_variables DOS_PUNTOS tipo_dato .)
    VARIABLE        reduce using rule 15 (declaracion -> lista_variables DOS_PUNTOS tipo_dato .)


state 76

    (18) tipo_dato -> FLOAT .

    C_LLAVE         reduce using rule 18 (tipo_dato -> FLOAT .)
    VARIABLE        reduce using rule 18 (tipo_dato -> FLOAT .)


state 77

    (19) tipo_dato -> INT .

    C_LLAVE         reduce using rule 19 (tipo_dato -> INT .)
    VARIABLE        reduce using rule 19 (tipo_dato -> INT .)


state 78

    (20) tipo_dato -> STR .

    C_LLAVE         reduce using rule 20 (tipo_dato -> STR .)
    VARIABLE        reduce using rule 20 (tipo_dato -> STR .)


state 79

    (17) lista_variables -> lista_variables COMA VARIABLE .

    DOS_PUNTOS      reduce using rule 17 (lista_variables -> lista_variables COMA VARIABLE .)
    COMA            reduce using rule 17 (lista_variables -> lista_variables COMA VARIABLE .)


state 80

    (39) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista . C_PARENTESIS

    C_PARENTESIS    shift and go to state 84


state 81

    (42) elementos -> elementos COMA elemento .

    C_CORCHETE      reduce using rule 42 (elementos -> elementos COMA elemento .)
    COMA            reduce using rule 42 (elementos -> elementos COMA elemento .)


state 82

    (36) bloque -> A_LLAVE programa . C_LLAVE

    C_LLAVE         shift and go to state 85


state 83

    (22) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE . bloque
    (36) bloque -> . A_LLAVE programa C_LLAVE

    A_LLAVE         shift and go to state 70

    bloque                         shift and go to state 86

state 84

    (39) suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .

    VARIABLE        reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    WHILE           reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    IF              reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    INIT            reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    READ            reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    WRITE           reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    SUMA_LOS_ULTIMOS reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    $end            reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)
    C_LLAVE         reduce using rule 39 (suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS .)


state 85

    (36) bloque -> A_LLAVE programa C_LLAVE .

    VARIABLE        reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    WHILE           reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    IF              reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    INIT            reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    READ            reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    WRITE           reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    SUMA_LOS_ULTIMOS reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    $end            reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    C_LLAVE         reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)
    ELSE            reduce using rule 36 (bloque -> A_LLAVE programa C_LLAVE .)


state 86

    (22) seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .

    VARIABLE        reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    WHILE           reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    IF              reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    INIT            reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    READ            reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    WRITE           reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    SUMA_LOS_ULTIMOS reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    $end            reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)
    C_LLAVE         reduce using rule 22 (seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque .)

