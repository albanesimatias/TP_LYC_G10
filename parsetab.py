
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNACIONrightIGUALIleftMAYORQMENORQMAYORIMENORIleftMASMENOSleftMULTIPLICACIONDIVISIONleftA_PARENTESISC_PARENTESISAND ASIGNACION A_CORCHETE A_LLAVE A_PARENTESIS CADENA COMA C_CORCHETE C_LLAVE C_PARENTESIS DISTINTOQ DIVISION DOS_PUNTOS ELSE FLOAT IF IGUALI INIT INT MAS MAYORI MAYORQ MENORI MENORQ MENOS MULTIPLICACION NOT N_BINARIO N_DECIMAL N_ENTERO OR PUNTO_Y_COMA READ STR SUMA_LOS_ULTIMOS VARIABLE WHILE WRITEprograma : programa sentencia\n                | sentencia\n    sentencia : asignacion\n                 | iteracion\n                 | seleccion\n                 | bloque_declaracion\n                 | read\n                 | write\n    read : READ A_PARENTESIS elemento C_PARENTESISwrite : WRITE A_PARENTESIS elemento C_PARENTESISbloque_declaracion : INIT A_LLAVE declaraciones C_LLAVE\n    declaraciones : declaraciones declaracion\n                     | declaracion\n    declaracion : lista_variables DOS_PUNTOS tipo_datolista_variables : VARIABLE\n                       | lista_variables COMA VARIABLE\n    tipo_dato : FLOAT\n                 | INT\n                 | STR\n    seleccion : IF A_PARENTESIS condicion C_PARENTESIS bloque\n                 | IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque\n    iteracion : WHILE A_PARENTESIS condicion C_PARENTESIS bloquecondicion : comparacion OR comparacion\n                 | comparacion AND comparacion\n                 | NOT comparacion\n                 | comparacion\n    comparacion : expresion comparador expresion\n                   | elemento\n    comparador : MENORI\n                  | MENORQ\n                  | MAYORQ\n                  | MAYORI\n                  | IGUALI\n                  | DISTINTOQ\n     bloque : A_LLAVE programa C_LLAVEasignacion : VARIABLE ASIGNACION lista\n                  | VARIABLE ASIGNACION expresion\n                  | VARIABLE ASIGNACION condicion\n    suma_los_ultimos : SUMA_LOS_ULTIMOS  A_PARENTESIS N_ENTERO PUNTO_Y_COMA  lista  C_PARENTESIS\n    lista : A_CORCHETE elementos C_CORCHETE\n             | A_CORCHETE C_CORCHETE\n    expresion : expresion MAS terminoexpresion : expresion MENOS terminoexpresion : terminotermino : termino MULTIPLICACION elementotermino : termino DIVISION elementotermino : elementoelemento : A_PARENTESIS expresion C_PARENTESISelementos : elementos COMA elemento\n                 | elementoelemento : N_ENTERO\n                | N_DECIMAL\n                | N_BINARIO\n                | VARIABLE\n                | CADENA\n                | suma_los_ultimos\n                | condicion\n    '
    
_lr_action_items = {'VARIABLE':([0,1,2,3,4,5,6,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,42,43,47,49,50,51,52,53,54,55,56,57,59,61,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,97,100,101,102,],[9,9,-2,-3,-4,-5,-6,-7,-8,-1,22,22,22,45,22,22,-54,-36,-37,-38,22,-44,-26,22,-28,22,-51,-52,-53,-55,-56,-28,45,-13,-57,22,22,22,-29,-30,-31,-32,-33,-34,-41,22,22,22,22,-25,-11,-12,94,-9,-10,-42,-43,-27,-40,22,-28,-28,-23,-24,-48,-22,9,-20,-14,-17,-18,-19,9,-35,-21,-39,]),'WHILE':([0,1,2,3,4,5,6,7,8,15,22,23,24,25,27,28,30,32,33,34,35,36,40,47,59,65,70,74,75,76,77,78,79,81,82,83,84,85,87,88,89,97,100,101,102,],[10,10,-2,-3,-4,-5,-6,-7,-8,-1,-54,-36,-37,-38,-44,-26,-28,-51,-52,-53,-55,-56,-28,-57,-41,-25,-11,-9,-10,-42,-43,-27,-40,-28,-28,-23,-24,-48,-22,10,-20,10,-35,-21,-39,]),'IF':([0,1,2,3,4,5,6,7,8,15,22,23,24,25,27,28,30,32,33,34,35,36,40,47,59,65,70,74,75,76,77,78,79,81,82,83,84,85,87,88,89,97,100,101,102,],[11,11,-2,-3,-4,-5,-6,-7,-8,-1,-54,-36,-37,-38,-44,-26,-28,-51,-52,-53,-55,-56,-28,-57,-41,-25,-11,-9,-10,-42,-43,-27,-40,-28,-28,-23,-24,-48,-22,11,-20,11,-35,-21,-39,]),'INIT':([0,1,2,3,4,5,6,7,8,15,22,23,24,25,27,28,30,32,33,34,35,36,40,47,59,65,70,74,75,76,77,78,79,81,82,83,84,85,87,88,89,97,100,101,102,],[12,12,-2,-3,-4,-5,-6,-7,-8,-1,-54,-36,-37,-38,-44,-26,-28,-51,-52,-53,-55,-56,-28,-57,-41,-25,-11,-9,-10,-42,-43,-27,-40,-28,-28,-23,-24,-48,-22,12,-20,12,-35,-21,-39,]),'READ':([0,1,2,3,4,5,6,7,8,15,22,23,24,25,27,28,30,32,33,34,35,36,40,47,59,65,70,74,75,76,77,78,79,81,82,83,84,85,87,88,89,97,100,101,102,],[13,13,-2,-3,-4,-5,-6,-7,-8,-1,-54,-36,-37,-38,-44,-26,-28,-51,-52,-53,-55,-56,-28,-57,-41,-25,-11,-9,-10,-42,-43,-27,-40,-28,-28,-23,-24,-48,-22,13,-20,13,-35,-21,-39,]),'WRITE':([0,1,2,3,4,5,6,7,8,15,22,23,24,25,27,28,30,32,33,34,35,36,40,47,59,65,70,74,75,76,77,78,79,81,82,83,84,85,87,88,89,97,100,101,102,],[14,14,-2,-3,-4,-5,-6,-7,-8,-1,-54,-36,-37,-38,-44,-26,-28,-51,-52,-53,-55,-56,-28,-57,-41,-25,-11,-9,-10,-42,-43,-27,-40,-28,-28,-23,-24,-48,-22,14,-20,14,-35,-21,-39,]),'$end':([1,2,3,4,5,6,7,8,15,22,23,24,25,27,28,30,32,33,34,35,36,40,47,59,65,70,74,75,76,77,78,79,81,82,83,84,85,87,89,100,101,102,],[0,-2,-3,-4,-5,-6,-7,-8,-1,-54,-36,-37,-38,-44,-26,-28,-51,-52,-53,-55,-56,-28,-57,-41,-25,-11,-9,-10,-42,-43,-27,-40,-28,-28,-23,-24,-48,-22,-20,-35,-21,-39,]),'C_LLAVE':([2,3,4,5,6,7,8,15,22,23,24,25,27,28,30,32,33,34,35,36,40,42,43,47,59,65,70,71,74,75,76,77,78,79,81,82,83,84,85,87,89,90,91,92,93,97,100,101,102,],[-2,-3,-4,-5,-6,-7,-8,-1,-54,-36,-37,-38,-44,-26,-28,-51,-52,-53,-55,-56,-28,70,-13,-57,-41,-25,-11,-12,-9,-10,-42,-43,-27,-40,-28,-28,-23,-24,-48,-22,-20,-14,-17,-18,-19,100,-35,-21,-39,]),'ASIGNACION':([9,],[16,]),'A_PARENTESIS':([10,11,13,14,16,17,18,20,21,26,29,31,37,49,50,51,52,53,54,55,56,57,61,62,63,64,80,],[17,18,20,21,31,31,31,31,31,31,31,31,67,31,31,31,-29,-30,-31,-32,-33,-34,31,31,31,31,31,]),'A_LLAVE':([12,68,69,98,],[19,88,88,88,]),'A_CORCHETE':([16,96,],[26,26,]),'NOT':([16,17,18,20,21,26,29,31,49,50,51,52,53,54,55,56,57,61,62,63,64,80,],[29,29,29,29,29,29,29,29,29,29,29,-29,-30,-31,-32,-33,-34,29,29,29,29,29,]),'N_ENTERO':([16,17,18,20,21,26,29,31,49,50,51,52,53,54,55,56,57,61,62,63,64,67,80,],[32,32,32,32,32,32,32,32,32,32,32,-29,-30,-31,-32,-33,-34,32,32,32,32,86,32,]),'N_DECIMAL':([16,17,18,20,21,26,29,31,49,50,51,52,53,54,55,56,57,61,62,63,64,80,],[33,33,33,33,33,33,33,33,33,33,33,-29,-30,-31,-32,-33,-34,33,33,33,33,33,]),'N_BINARIO':([16,17,18,20,21,26,29,31,49,50,51,52,53,54,55,56,57,61,62,63,64,80,],[34,34,34,34,34,34,34,34,34,34,34,-29,-30,-31,-32,-33,-34,34,34,34,34,34,]),'CADENA':([16,17,18,20,21,26,29,31,49,50,51,52,53,54,55,56,57,61,62,63,64,80,],[35,35,35,35,35,35,35,35,35,35,35,-29,-30,-31,-32,-33,-34,35,35,35,35,35,]),'SUMA_LOS_ULTIMOS':([16,17,18,20,21,26,29,31,49,50,51,52,53,54,55,56,57,61,62,63,64,80,],[37,37,37,37,37,37,37,37,37,37,37,-29,-30,-31,-32,-33,-34,37,37,37,37,37,]),'MULTIPLICACION':([22,25,27,28,30,32,33,34,35,36,38,40,41,46,47,48,60,65,76,77,78,81,82,83,84,85,95,102,],[-54,-57,61,-26,-28,-51,-52,-53,-55,-56,-57,-28,-57,-28,-57,-28,-28,-25,61,61,-27,-28,-28,-23,-24,-48,-28,-39,]),'DIVISION':([22,25,27,28,30,32,33,34,35,36,38,40,41,46,47,48,60,65,76,77,78,81,82,83,84,85,95,102,],[-54,-57,62,-26,-28,-51,-52,-53,-55,-56,-57,-28,-57,-28,-57,-28,-28,-25,62,62,-27,-28,-28,-23,-24,-48,-28,-39,]),'MAS':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,49,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,49,-28,-57,-28,-57,-28,-28,-25,49,-42,-43,49,-28,-28,-23,-24,-48,-28,-39,]),'MENOS':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,50,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,50,-28,-57,-28,-57,-28,-28,-25,50,-42,-43,50,-28,-28,-23,-24,-48,-28,-39,]),'MENORI':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,52,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,52,-28,-57,-28,-57,-28,-28,-25,52,-42,-43,52,-28,-28,-23,-24,-48,-28,-39,]),'MENORQ':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,53,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,53,-28,-57,-28,-57,-28,-28,-25,53,-42,-43,53,-28,-28,-23,-24,-48,-28,-39,]),'MAYORQ':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,54,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,54,-28,-57,-28,-57,-28,-28,-25,54,-42,-43,54,-28,-28,-23,-24,-48,-28,-39,]),'MAYORI':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,55,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,55,-28,-57,-28,-57,-28,-28,-25,55,-42,-43,55,-28,-28,-23,-24,-48,-28,-39,]),'IGUALI':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,56,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,56,-28,-57,-28,-57,-28,-28,-25,56,-42,-43,56,-28,-28,-23,-24,-48,-28,-39,]),'DISTINTOQ':([22,24,25,27,28,30,32,33,34,35,36,38,39,40,41,46,47,48,60,65,66,76,77,78,81,82,83,84,85,95,102,],[-54,57,-57,-44,-26,-28,-51,-52,-53,-55,-56,-57,57,-28,-57,-28,-57,-28,-28,-25,57,-42,-43,57,-28,-28,-23,-24,-48,-28,-39,]),'OR':([22,25,27,28,30,32,33,34,35,36,38,40,41,46,47,48,60,65,76,77,78,81,82,83,84,85,95,102,],[-54,-57,-44,63,-28,-51,-52,-53,-55,-56,-57,-28,-57,-28,-57,-28,-28,63,-42,-43,-27,-28,-28,63,63,-48,-28,-39,]),'AND':([22,25,27,28,30,32,33,34,35,36,38,40,41,46,47,48,60,65,76,77,78,81,82,83,84,85,95,102,],[-54,-57,-44,64,-28,-51,-52,-53,-55,-56,-57,-28,-57,-28,-57,-28,-28,64,-42,-43,-27,-28,-28,64,64,-48,-28,-39,]),'C_PARENTESIS':([22,27,28,30,32,33,34,35,36,38,40,41,46,47,48,59,65,66,76,77,78,79,81,82,83,84,85,99,102,],[-54,-44,-26,-28,-51,-52,-53,-55,-56,68,-28,69,74,-57,75,-41,-25,85,-42,-43,-27,-40,-28,-28,-23,-24,-48,102,-39,]),'C_CORCHETE':([22,26,27,28,30,32,33,34,35,36,40,47,58,60,65,76,77,78,81,82,83,84,85,95,102,],[-54,59,-44,-26,-28,-51,-52,-53,-55,-56,-28,-57,79,-28,-25,-42,-43,-27,-28,-28,-23,-24,-48,-28,-39,]),'COMA':([22,27,28,30,32,33,34,35,36,40,44,45,47,58,60,65,76,77,78,81,82,83,84,85,94,95,102,],[-54,-44,-26,-28,-51,-52,-53,-55,-56,-28,73,-15,-57,80,-28,-25,-42,-43,-27,-28,-28,-23,-24,-48,-16,-28,-39,]),'DOS_PUNTOS':([44,45,94,],[72,-15,-16,]),'FLOAT':([72,],[91,]),'INT':([72,],[92,]),'STR':([72,],[93,]),'PUNTO_Y_COMA':([86,],[96,]),'ELSE':([89,100,],[98,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,88,],[1,97,]),'sentencia':([0,1,88,97,],[2,15,2,15,]),'asignacion':([0,1,88,97,],[3,3,3,3,]),'iteracion':([0,1,88,97,],[4,4,4,4,]),'seleccion':([0,1,88,97,],[5,5,5,5,]),'bloque_declaracion':([0,1,88,97,],[6,6,6,6,]),'read':([0,1,88,97,],[7,7,7,7,]),'write':([0,1,88,97,],[8,8,8,8,]),'lista':([16,96,],[23,99,]),'expresion':([16,17,18,20,21,26,29,31,49,50,51,61,62,63,64,80,],[24,39,39,39,39,39,39,66,39,39,78,39,39,39,39,39,]),'condicion':([16,17,18,20,21,26,29,31,49,50,51,61,62,63,64,80,],[25,38,41,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'termino':([16,17,18,20,21,26,29,31,49,50,51,61,62,63,64,80,],[27,27,27,27,27,27,27,27,76,77,27,27,27,27,27,27,]),'comparacion':([16,17,18,20,21,26,29,31,49,50,51,61,62,63,64,80,],[28,28,28,28,28,28,65,28,28,28,28,28,28,83,84,28,]),'elemento':([16,17,18,20,21,26,29,31,49,50,51,61,62,63,64,80,],[30,40,40,46,48,60,40,30,30,30,30,81,82,40,40,95,]),'suma_los_ultimos':([16,17,18,20,21,26,29,31,49,50,51,61,62,63,64,80,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'declaraciones':([19,],[42,]),'declaracion':([19,42,],[43,71,]),'lista_variables':([19,42,],[44,44,]),'comparador':([24,39,66,78,],[51,51,51,51,]),'elementos':([26,],[58,]),'bloque':([68,69,98,],[87,89,101,]),'tipo_dato':([72,],[90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa sentencia','programa',2,'p_programa','parser.py',23),
  ('programa -> sentencia','programa',1,'p_programa','parser.py',24),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',33),
  ('sentencia -> iteracion','sentencia',1,'p_sentencia','parser.py',34),
  ('sentencia -> seleccion','sentencia',1,'p_sentencia','parser.py',35),
  ('sentencia -> bloque_declaracion','sentencia',1,'p_sentencia','parser.py',36),
  ('sentencia -> read','sentencia',1,'p_sentencia','parser.py',37),
  ('sentencia -> write','sentencia',1,'p_sentencia','parser.py',38),
  ('read -> READ A_PARENTESIS elemento C_PARENTESIS','read',4,'p_read','parser.py',44),
  ('write -> WRITE A_PARENTESIS elemento C_PARENTESIS','write',4,'p_write','parser.py',49),
  ('bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE','bloque_declaracion',4,'p_bloque_declaracion','parser.py',54),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','parser.py',60),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','parser.py',61),
  ('declaracion -> lista_variables DOS_PUNTOS tipo_dato','declaracion',3,'p_declaracion','parser.py',67),
  ('lista_variables -> VARIABLE','lista_variables',1,'p_lista_variables','parser.py',72),
  ('lista_variables -> lista_variables COMA VARIABLE','lista_variables',3,'p_lista_variables','parser.py',73),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','parser.py',78),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','parser.py',79),
  ('tipo_dato -> STR','tipo_dato',1,'p_tipo_dato','parser.py',80),
  ('seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque','seleccion',5,'p_seleccion','parser.py',86),
  ('seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque','seleccion',7,'p_seleccion','parser.py',87),
  ('iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque','iteracion',5,'p_iteracion','parser.py',97),
  ('condicion -> comparacion OR comparacion','condicion',3,'p_condicion','parser.py',103),
  ('condicion -> comparacion AND comparacion','condicion',3,'p_condicion','parser.py',104),
  ('condicion -> NOT comparacion','condicion',2,'p_condicion','parser.py',105),
  ('condicion -> comparacion','condicion',1,'p_condicion','parser.py',106),
  ('comparacion -> expresion comparador expresion','comparacion',3,'p_comparacion','parser.py',115),
  ('comparacion -> elemento','comparacion',1,'p_comparacion','parser.py',116),
  ('comparador -> MENORI','comparador',1,'p_comparador','parser.py',130),
  ('comparador -> MENORQ','comparador',1,'p_comparador','parser.py',131),
  ('comparador -> MAYORQ','comparador',1,'p_comparador','parser.py',132),
  ('comparador -> MAYORI','comparador',1,'p_comparador','parser.py',133),
  ('comparador -> IGUALI','comparador',1,'p_comparador','parser.py',134),
  ('comparador -> DISTINTOQ','comparador',1,'p_comparador','parser.py',135),
  ('bloque -> A_LLAVE programa C_LLAVE','bloque',3,'p_bloque','parser.py',141),
  ('asignacion -> VARIABLE ASIGNACION lista','asignacion',3,'p_asignacion','parser.py',146),
  ('asignacion -> VARIABLE ASIGNACION expresion','asignacion',3,'p_asignacion','parser.py',147),
  ('asignacion -> VARIABLE ASIGNACION condicion','asignacion',3,'p_asignacion','parser.py',148),
  ('suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS','suma_los_ultimos',6,'p_sumarLosUltimos','parser.py',154),
  ('lista -> A_CORCHETE elementos C_CORCHETE','lista',3,'p_lista','parser.py',170),
  ('lista -> A_CORCHETE C_CORCHETE','lista',2,'p_lista','parser.py',171),
  ('expresion -> expresion MAS termino','expresion',3,'p_expresion_mas','parser.py',180),
  ('expresion -> expresion MENOS termino','expresion',3,'p_expresion_menos','parser.py',185),
  ('expresion -> termino','expresion',1,'p_expresion_termino','parser.py',190),
  ('termino -> termino MULTIPLICACION elemento','termino',3,'p_termino_multiplicacion','parser.py',195),
  ('termino -> termino DIVISION elemento','termino',3,'p_termino_division','parser.py',200),
  ('termino -> elemento','termino',1,'p_termino_elemento','parser.py',208),
  ('elemento -> A_PARENTESIS expresion C_PARENTESIS','elemento',3,'p_elemento_expresion','parser.py',213),
  ('elementos -> elementos COMA elemento','elementos',3,'p_elementos','parser.py',218),
  ('elementos -> elemento','elementos',1,'p_elementos','parser.py',219),
  ('elemento -> N_ENTERO','elemento',1,'p_elemento','parser.py',227),
  ('elemento -> N_DECIMAL','elemento',1,'p_elemento','parser.py',228),
  ('elemento -> N_BINARIO','elemento',1,'p_elemento','parser.py',229),
  ('elemento -> VARIABLE','elemento',1,'p_elemento','parser.py',230),
  ('elemento -> CADENA','elemento',1,'p_elemento','parser.py',231),
  ('elemento -> suma_los_ultimos','elemento',1,'p_elemento','parser.py',232),
  ('elemento -> condicion','elemento',1,'p_elemento','parser.py',233),
]
