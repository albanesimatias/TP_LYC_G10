
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNACION A_CORCHETE A_LLAVE A_PARENTESIS CADENA COMA C_CORCHETE C_LLAVE C_PARENTESIS DISTINTOQ DIVISION DOS_PUNTOS ELSE FLOAT IF IGUALI INIT INT MAYORI MAYORQ MENORI MENORQ MULTIPLICACION NOT N_BINARIO N_DECIMAL N_ENTERO OR PUNTO_Y_COMA READ RESTA STR SUMA SUMA_LOS_ULTIMOS VARIABLE WHILE WRITEprograma : sentencia programa\n                | sentencia\n    sentencia : asignacion\n                 | iteracion\n                 | seleccion\n                 | bloque_declaracion\n                 | read\n                 | write\n                 | suma_los_ultimos\n    read : READ A_PARENTESIS elemento C_PARENTESISwrite : WRITE A_PARENTESIS elemento C_PARENTESISbloque_declaracion : INIT A_LLAVE declaraciones  C_LLAVE\n    declaraciones : declaraciones declaracion\n                     | declaracion\n    declaracion : lista_variables DOS_PUNTOS tipo_datolista_variables : VARIABLE\n                       | lista_variables COMA VARIABLE\n    tipo_dato : FLOAT\n                 | INT\n                 | STR\n    seleccion : IF A_PARENTESIS condicion C_PARENTESIS bloque\n                 | IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque\n    iteracion : WHILE A_PARENTESIS condicion C_PARENTESIS bloquecondicion : comparacion OR comparacion\n                 | comparacion AND comparacion\n                 | NOT comparacion\n                 | comparacion\n    comparacion : elemento comparador elemento\n                   | elemento\n    comparador : MENORI\n                  | MENORQ\n                  | MAYORQ\n                  | MAYORI\n                  | IGUALI\n                  | DISTINTOQ\n     bloque : A_LLAVE programa C_LLAVEasignacion : VARIABLE ASIGNACION elemento\n                  | VARIABLE ASIGNACION lista\n    suma_los_ultimos : SUMA_LOS_ULTIMOS  A_PARENTESIS N_ENTERO PUNTO_Y_COMA  lista  C_PARENTESIS\n    lista : A_CORCHETE elementos C_CORCHETE\n             | A_CORCHETE C_CORCHETE\n    elementos : elementos COMA elemento\n                 | elementoelemento : N_ENTERO\n                | N_DECIMAL\n                | N_BINARIO\n                | VARIABLE\n                | CADENA\n    '
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,25,26,27,28,29,30,31,32,35,38,39,46,49,50,52,53,54,55,56,57,58,60,61,63,64,65,67,68,69,70,74,75,76,77,78,84,85,86,],[10,10,-3,-4,-5,-6,-7,-8,-9,25,25,25,41,25,25,-47,-37,-38,-44,-45,-46,-48,25,25,41,-14,-41,25,25,25,-30,-31,-32,-33,-34,-35,-12,-13,79,-10,-11,-40,25,-23,10,-21,-15,-18,-19,-20,-39,-36,-22,]),'WHILE':([0,2,3,4,5,6,7,8,9,25,26,27,28,29,30,31,46,60,64,65,67,69,70,74,84,85,86,],[11,11,-3,-4,-5,-6,-7,-8,-9,-47,-37,-38,-44,-45,-46,-48,-41,-12,-10,-11,-40,-23,11,-21,-39,-36,-22,]),'IF':([0,2,3,4,5,6,7,8,9,25,26,27,28,29,30,31,46,60,64,65,67,69,70,74,84,85,86,],[12,12,-3,-4,-5,-6,-7,-8,-9,-47,-37,-38,-44,-45,-46,-48,-41,-12,-10,-11,-40,-23,12,-21,-39,-36,-22,]),'INIT':([0,2,3,4,5,6,7,8,9,25,26,27,28,29,30,31,46,60,64,65,67,69,70,74,84,85,86,],[13,13,-3,-4,-5,-6,-7,-8,-9,-47,-37,-38,-44,-45,-46,-48,-41,-12,-10,-11,-40,-23,13,-21,-39,-36,-22,]),'READ':([0,2,3,4,5,6,7,8,9,25,26,27,28,29,30,31,46,60,64,65,67,69,70,74,84,85,86,],[14,14,-3,-4,-5,-6,-7,-8,-9,-47,-37,-38,-44,-45,-46,-48,-41,-12,-10,-11,-40,-23,14,-21,-39,-36,-22,]),'WRITE':([0,2,3,4,5,6,7,8,9,25,26,27,28,29,30,31,46,60,64,65,67,69,70,74,84,85,86,],[15,15,-3,-4,-5,-6,-7,-8,-9,-47,-37,-38,-44,-45,-46,-48,-41,-12,-10,-11,-40,-23,15,-21,-39,-36,-22,]),'SUMA_LOS_ULTIMOS':([0,2,3,4,5,6,7,8,9,25,26,27,28,29,30,31,46,60,64,65,67,69,70,74,84,85,86,],[16,16,-3,-4,-5,-6,-7,-8,-9,-47,-37,-38,-44,-45,-46,-48,-41,-12,-10,-11,-40,-23,16,-21,-39,-36,-22,]),'$end':([1,2,3,4,5,6,7,8,9,17,25,26,27,28,29,30,31,46,60,64,65,67,69,74,84,85,86,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-1,-47,-37,-38,-44,-45,-46,-48,-41,-12,-10,-11,-40,-23,-21,-39,-36,-22,]),'C_LLAVE':([2,3,4,5,6,7,8,9,17,25,26,27,28,29,30,31,38,39,46,60,61,64,65,67,69,74,75,76,77,78,82,84,85,86,],[-2,-3,-4,-5,-6,-7,-8,-9,-1,-47,-37,-38,-44,-45,-46,-48,60,-14,-41,-12,-13,-10,-11,-40,-23,-21,-15,-18,-19,-20,85,-39,-36,-22,]),'ASIGNACION':([10,],[18,]),'A_PARENTESIS':([11,12,14,15,16,],[19,20,22,23,24,]),'A_LLAVE':([13,48,59,83,],[21,70,70,70,]),'N_ENTERO':([18,19,20,22,23,24,32,35,49,50,52,53,54,55,56,57,58,68,],[28,28,28,28,28,44,28,28,28,28,28,-30,-31,-32,-33,-34,-35,28,]),'N_DECIMAL':([18,19,20,22,23,32,35,49,50,52,53,54,55,56,57,58,68,],[29,29,29,29,29,29,29,29,29,29,-30,-31,-32,-33,-34,-35,29,]),'N_BINARIO':([18,19,20,22,23,32,35,49,50,52,53,54,55,56,57,58,68,],[30,30,30,30,30,30,30,30,30,30,-30,-31,-32,-33,-34,-35,30,]),'CADENA':([18,19,20,22,23,32,35,49,50,52,53,54,55,56,57,58,68,],[31,31,31,31,31,31,31,31,31,31,-30,-31,-32,-33,-34,-35,31,]),'A_CORCHETE':([18,66,],[32,32,]),'NOT':([19,20,],[35,35,]),'MENORI':([25,28,29,30,31,36,],[-47,-44,-45,-46,-48,53,]),'MENORQ':([25,28,29,30,31,36,],[-47,-44,-45,-46,-48,54,]),'MAYORQ':([25,28,29,30,31,36,],[-47,-44,-45,-46,-48,55,]),'MAYORI':([25,28,29,30,31,36,],[-47,-44,-45,-46,-48,56,]),'IGUALI':([25,28,29,30,31,36,],[-47,-44,-45,-46,-48,57,]),'DISTINTOQ':([25,28,29,30,31,36,],[-47,-44,-45,-46,-48,58,]),'OR':([25,28,29,30,31,34,36,73,],[-47,-44,-45,-46,-48,49,-29,-28,]),'AND':([25,28,29,30,31,34,36,73,],[-47,-44,-45,-46,-48,50,-29,-28,]),'C_PARENTESIS':([25,28,29,30,31,33,34,36,37,42,43,46,51,67,71,72,73,80,],[-47,-44,-45,-46,-48,48,-27,-29,59,64,65,-41,-26,-40,-24,-25,-28,84,]),'C_CORCHETE':([25,28,29,30,31,32,45,47,81,],[-47,-44,-45,-46,-48,46,67,-43,-42,]),'COMA':([25,28,29,30,31,40,41,45,47,79,81,],[-47,-44,-45,-46,-48,63,-16,68,-43,-17,-42,]),'DOS_PUNTOS':([40,41,79,],[62,-16,-17,]),'PUNTO_Y_COMA':([44,],[66,]),'FLOAT':([62,],[76,]),'INT':([62,],[77,]),'STR':([62,],[78,]),'ELSE':([74,85,],[83,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,70,],[1,17,82,]),'sentencia':([0,2,70,],[2,2,2,]),'asignacion':([0,2,70,],[3,3,3,]),'iteracion':([0,2,70,],[4,4,4,]),'seleccion':([0,2,70,],[5,5,5,]),'bloque_declaracion':([0,2,70,],[6,6,6,]),'read':([0,2,70,],[7,7,7,]),'write':([0,2,70,],[8,8,8,]),'suma_los_ultimos':([0,2,70,],[9,9,9,]),'elemento':([18,19,20,22,23,32,35,49,50,52,68,],[26,36,36,42,43,47,36,36,36,73,81,]),'lista':([18,66,],[27,80,]),'condicion':([19,20,],[33,37,]),'comparacion':([19,20,35,49,50,],[34,34,51,71,72,]),'declaraciones':([21,],[38,]),'declaracion':([21,38,],[39,61,]),'lista_variables':([21,38,],[40,40,]),'elementos':([32,],[45,]),'comparador':([36,],[52,]),'bloque':([48,59,83,],[69,74,86,]),'tipo_dato':([62,],[75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencia programa','programa',2,'p_programa','parser.py',10),
  ('programa -> sentencia','programa',1,'p_programa','parser.py',11),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',20),
  ('sentencia -> iteracion','sentencia',1,'p_sentencia','parser.py',21),
  ('sentencia -> seleccion','sentencia',1,'p_sentencia','parser.py',22),
  ('sentencia -> bloque_declaracion','sentencia',1,'p_sentencia','parser.py',23),
  ('sentencia -> read','sentencia',1,'p_sentencia','parser.py',24),
  ('sentencia -> write','sentencia',1,'p_sentencia','parser.py',25),
  ('sentencia -> suma_los_ultimos','sentencia',1,'p_sentencia','parser.py',26),
  ('read -> READ A_PARENTESIS elemento C_PARENTESIS','read',4,'p_read','parser.py',32),
  ('write -> WRITE A_PARENTESIS elemento C_PARENTESIS','write',4,'p_write','parser.py',37),
  ('bloque_declaracion -> INIT A_LLAVE declaraciones C_LLAVE','bloque_declaracion',4,'p_bloque_declaracion','parser.py',42),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','parser.py',48),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','parser.py',49),
  ('declaracion -> lista_variables DOS_PUNTOS tipo_dato','declaracion',3,'p_declaracion','parser.py',56),
  ('lista_variables -> VARIABLE','lista_variables',1,'p_lista_variables','parser.py',61),
  ('lista_variables -> lista_variables COMA VARIABLE','lista_variables',3,'p_lista_variables','parser.py',62),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','parser.py',67),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','parser.py',68),
  ('tipo_dato -> STR','tipo_dato',1,'p_tipo_dato','parser.py',69),
  ('seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque','seleccion',5,'p_seleccion','parser.py',75),
  ('seleccion -> IF A_PARENTESIS condicion C_PARENTESIS bloque ELSE bloque','seleccion',7,'p_seleccion','parser.py',76),
  ('iteracion -> WHILE A_PARENTESIS condicion C_PARENTESIS bloque','iteracion',5,'p_iteracion','parser.py',86),
  ('condicion -> comparacion OR comparacion','condicion',3,'p_condicion','parser.py',92),
  ('condicion -> comparacion AND comparacion','condicion',3,'p_condicion','parser.py',93),
  ('condicion -> NOT comparacion','condicion',2,'p_condicion','parser.py',94),
  ('condicion -> comparacion','condicion',1,'p_condicion','parser.py',95),
  ('comparacion -> elemento comparador elemento','comparacion',3,'p_comparacion','parser.py',104),
  ('comparacion -> elemento','comparacion',1,'p_comparacion','parser.py',105),
  ('comparador -> MENORI','comparador',1,'p_comparador','parser.py',119),
  ('comparador -> MENORQ','comparador',1,'p_comparador','parser.py',120),
  ('comparador -> MAYORQ','comparador',1,'p_comparador','parser.py',121),
  ('comparador -> MAYORI','comparador',1,'p_comparador','parser.py',122),
  ('comparador -> IGUALI','comparador',1,'p_comparador','parser.py',123),
  ('comparador -> DISTINTOQ','comparador',1,'p_comparador','parser.py',124),
  ('bloque -> A_LLAVE programa C_LLAVE','bloque',3,'p_bloque','parser.py',130),
  ('asignacion -> VARIABLE ASIGNACION elemento','asignacion',3,'p_asignacion','parser.py',135),
  ('asignacion -> VARIABLE ASIGNACION lista','asignacion',3,'p_asignacion','parser.py',136),
  ('suma_los_ultimos -> SUMA_LOS_ULTIMOS A_PARENTESIS N_ENTERO PUNTO_Y_COMA lista C_PARENTESIS','suma_los_ultimos',6,'p_sumaLosUltimos','parser.py',142),
  ('lista -> A_CORCHETE elementos C_CORCHETE','lista',3,'p_lista','parser.py',153),
  ('lista -> A_CORCHETE C_CORCHETE','lista',2,'p_lista','parser.py',154),
  ('elementos -> elementos COMA elemento','elementos',3,'p_elementos','parser.py',160),
  ('elementos -> elemento','elementos',1,'p_elementos','parser.py',161),
  ('elemento -> N_ENTERO','elemento',1,'p_elemento','parser.py',169),
  ('elemento -> N_DECIMAL','elemento',1,'p_elemento','parser.py',170),
  ('elemento -> N_BINARIO','elemento',1,'p_elemento','parser.py',171),
  ('elemento -> VARIABLE','elemento',1,'p_elemento','parser.py',172),
  ('elemento -> CADENA','elemento',1,'p_elemento','parser.py',173),
]
